var haloFilter = (function (exports) {
  'use strict';

  function format(d, fmt) {
      if (d === void 0) { d = new Date(); }
      if (fmt === void 0) { fmt = "YYYY-MM-DD HH:mm:ss"; }
      var date = d instanceof Date ? d : toDate(d);
      var o = {
          "Y+": date.getFullYear(),
          "M+": date.getMonth() + 1,
          "D+": date.getDate(),
          "H+": date.getHours(),
          "m+": date.getMinutes(),
          "s+": date.getSeconds(),
          "q+": Math.floor((date.getMonth() + 3) / 3),
          "S+": date.getMilliseconds() //毫秒
      };
      for (var k in o) {
          if (new RegExp("(" + k + ")").test(fmt)) {
              if (k == "Y+") {
                  fmt = fmt.replace(RegExp.$1, ("" + o[k]).substr(4 - RegExp.$1.length));
              }
              else if (k == "S+") {
                  var lens = RegExp.$1.length;
                  lens = lens == 1 ? 3 : lens;
                  fmt = fmt.replace(RegExp.$1, ("00" + o[k]).substr(("" + o[k]).length - 1, lens));
              }
              else {
                  var v = "" + o[k];
                  fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? v : ("00" + v).substr(v.length));
              }
          }
      }
      return fmt;
  }
  function toDate(s) {
      if (s instanceof Date)
          return s;
      return new Date(s
          .replace(/-/g, "/")
          .replace(/(\.\d+)?/g, "")
          .replace("T", " "));
  }
  var dayjs = { format: format, toDate: toDate };

  /**
   * @desc 隐藏手机号
   * @param {*} str
   * @returns {string}
   */
  function hidePhone(phone) {
      if (phone === void 0) { phone = ""; }
      return phone.toString().replace(/(\d{3})\d{4}(\d{4})/, "$1****$2");
  }
  /**
   * @desc 获取字符串字节
   * @param {*} str
   * @returns {number}
   */
  function byteSize(str) {
      return new Blob([str]).size;
  }
  /**
   * @desc html转化防止xs攻击
   * @params str {string}
   * @returns {string}
   */
  function htmlEncode(str) {
      if (str === void 0) { str = ""; }
      return str
          .replace(/&/g, "&amp;")
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;")
          .replace(/"/g, "&quot;")
          .replace(/'/g, "&#x27;")
          .replace(/\//g, "&#x2f;");
  }
  /**
   * @desc 格式化货币
   * @param num {string || number}
   * @returns {string}
   */
  function formatCurrency(num) {
      return (+num || 0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }
  /**
   * @desc   格式化${startTime}距现在的已过时间
   * @param  {Date} startTime
   * @return {String}
   */
  function timeAgo(startTime) {
      var currentTime = new Date().getTime();
      var time = currentTime - dayjs.toDate(startTime).getTime();
      var day = Math.floor(time / (1000 * 60 * 60 * 24));
      var hour = Math.floor(time / (1000 * 60 * 60));
      var min = Math.floor(time / (1000 * 60));
      var month = Math.floor(day / 30);
      var year = Math.floor(month / 12);
      if (year)
          return year + "年前";
      if (month)
          return month + "月前";
      if (day)
          return day + "天前";
      if (hour)
          return hour + "小时前";
      if (min)
          return min + "分钟前";
      else
          return "刚刚";
  }
  /**
   *
   * @desc   格式化现在距${endTime}的剩余时间
   * @param  {Date} endTime
   * @return {String}
   */
  function remainTime(endTime) {
      var startDate = new Date(); // 开始时间
      var endDate = dayjs.toDate(endTime); // 结束时间
      var t = endDate.getTime() - startDate.getTime(); // 时间差
      var d = 0;
      var h = 0;
      var m = 0;
      var s = 0;
      if (t >= 0) {
          d = Math.floor(t / 1000 / 3600 / 24);
          h = Math.floor((t / 1000 / 60 / 60) % 24);
          m = Math.floor((t / 1000 / 60) % 60);
          s = Math.floor((t / 1000) % 60);
      }
      return d + "天 " + h + "小时 " + m + "分钟 " + s + "秒";
  }

  exports.byteSize = byteSize;
  exports.formatCurrency = formatCurrency;
  exports.hidePhone = hidePhone;
  exports.htmlEncode = htmlEncode;
  exports.remainTime = remainTime;
  exports.timeAgo = timeAgo;

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;

}({}));

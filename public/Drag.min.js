var haloDrag = (function () {
  'use strict';

  // parentNode 设置document.body全屏拖拽
  var Drag = /** @class */ (function () {
      function Drag(el, onchange, parentNode) {
          if (onchange === void 0) { onchange = function () { }; }
          this.el = el;
          this.el = el;
          this.parentNode = parentNode || el.parentElement || document.body;
          this.onchange = onchange;
          this.init(el, onchange);
      }
      Drag.prototype.init = function (el, onchange) {
          this.el = el;
          el.style.position = "absolute";
          el.style.cursor = "grab";
          if (!this.parentNode)
              return;
          var maxLeft = this.parentNode.clientWidth - el.clientWidth;
          var maxTop = this.parentNode.clientHeight - el.clientHeight;
          el.onmousedown = function (e) {
              el.style.cursor = "grabbing";
              var disX = e.clientX - el.offsetLeft;
              var disY = e.clientY - el.offsetTop;
              document.onmousemove = function (e) {
                  //  获取到鼠标拖拽后的横向位移(距离父级元素)
                  var l = e.clientX - disX;
                  //  获取到鼠标拖拽后的纵向位移(距离父级元素)
                  var t = e.clientY - disY;
                  if (!el.style)
                      return;
                  el.style.left = l + "px";
                  el.style.top = t + "px";
                  if (e.clientX - disX <= 0) {
                      el.style.left = 0 + "px";
                  }
                  else if (e.clientX - disX >= maxLeft) {
                      el.style.left = maxLeft + "px";
                  }
                  if (e.clientY - disY <= 0) {
                      el.style.top = 0 + "px";
                  }
                  else if (e.clientY - disY >= maxTop) {
                      el.style.top = maxTop + "px";
                  }
                  return false;
              };
              // 松开事件后，移除事件
              document.onmouseup = function () {
                  // 将此时的位置传出去
                  document.onmousemove = null;
                  document.onmouseup = null;
                  if (el && el.style) {
                      el.style.cursor = "grab";
                      onchange({
                          x: el.style.left ? el.style.left.replace("px", "") : 0,
                          y: el.style.top ? el.style.top.replace("px", "") : 0
                      });
                  }
              };
          };
      };
      Drag.prototype.destroy = function () {
          var el = this.el;
          if (el && el.onmousedown) {
              el.onmousedown = function () { };
          }
      };
      return Drag;
  }());

  return Drag;

}());

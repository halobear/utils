var haloUtils = (function (exports) {
  'use strict'

  var win = window
  var requestAnimationFrame = (win.requestAnimationFrame =
    win.requestAnimationFrame ||
    win.webkitRequestAnimationFrame ||
    win.mozRequestAnimationFrame ||
    win.msRequestAnimationFrame ||
    function (callback) {
      return window.setTimeout(callback, 1000 / 60)
    })
  var cancelAnimationFrame = (win.cancelAnimationFrame =
    win.cancelAnimationFrame ||
    win.webkitCancelAnimationFrame ||
    win.mozCancelAnimationFrame ||
    win.msCancelAnimationFrame ||
    win.oCancelAnimationFrame ||
    function (id) {
      return clearTimeout(id)
    })

  /**
   * @desc 随机生成颜色
   * @return {String}
   */
  function random() {
    return '#' + ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)
  }
  /**
   * rgb to hex
   * @param {Number} r
   * @param {Number} g
   * @param {Number} b
   * @return {string} hex
   */
  function rgb2hex(r, g, b) {
    var rgb = b | (g << 8) | (r << 16)
    return '#' + (0x1000000 + rgb).toString(16).slice(1)
  }
  /**
   * hexo to rgb
   * @param {string} hex
   * @return {string} rgb
   */
  function hex2rgb(hex) {
    if (!/^#?([0-9a-fA-F]{3}|[#-9a-fA-F]{6})$/.test(hex)) return ''
    var str = hex.replace('#', '')
    if (str.length === 3) {
      str = str
        .split('')
        .map(function (v) {
          return v + v
        })
        .join('')
    }
    var n = parseInt(str, 16)
    var r = (n >> 16) & 255
    var g = (n >> 8) & 255
    var b = n & 255
    return r + ',' + g + ',' + b
  }

  var color = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    random: random,
    rgb2hex: rgb2hex,
    hex2rgb: hex2rgb,
  })

  /**
   * @desc 根据name读取cookie
   * @param  {String} name
   * @return {String} cookie
   */
  function getCookie(name) {
    var arr = document.cookie.replace(/\s/g, '').split(';')
    for (var i = 0; i < arr.length; i++) {
      var tempArr = arr[i].split('=')
      if (tempArr[0] === name) {
        return decodeURIComponent(tempArr[1])
      }
    }
    return ''
  }
  /**
   * @desc  设置Cookie
   * @param {String} name
   * @param {String} value
   * @param {Number} days
   */
  function setCookie(name, value, days, path) {
    if (days === void 0) {
      days = 1
    }
    if (path === void 0) {
      path = '/'
    }
    var date = new Date()
    date.setDate(date.getDate() + days)
    document.cookie = name + '=' + value + ';expires=' + date + ';path=' + path
  }
  /**
   * @desc 根据name删除cookie
   * @param  {String} name
   */
  function removeCookie(name) {
    // 设置已过期，系统会立刻删除cookie
    setCookie(name, '', -1)
  }
  var cookie = {
    get: getCookie,
    set: setCookie,
    remove: removeCookie,
  }

  /**
   * @description: copy string
   * @param {String} str
   * @return {Boolean} success
   */
  var copy = function (str) {
    var el = document.createElement('textarea')
    el.setAttribute('readonly', '')
    el.value = str
    el.style.position = 'absolute'
    el.style.left = '-9999px'
    el.style.fontSize = '12pt'
    var selection = document.getSelection()
    var originalRange
    if (selection && selection.rangeCount > 0) {
      originalRange = selection.getRangeAt(0)
    }
    document.body.appendChild(el)
    el.select()
    el.selectionStart = 0
    el.selectionEnd = str.length
    var success = false
    try {
      success = document.execCommand('copy')
      /* eslint-disable */
    } catch (err) {}
    document.body.removeChild(el)
    if (originalRange && selection) {
      selection.removeAllRanges()
      selection.addRange(originalRange)
    }
    return success
  }

  function format(d, fmt) {
    if (d === void 0) {
      d = new Date()
    }
    if (fmt === void 0) {
      fmt = 'YYYY-MM-DD HH:mm:ss'
    }
    var date = d instanceof Date ? d : toDate(d)
    var o = {
      'Y+': date.getFullYear(),
      'M+': date.getMonth() + 1,
      'D+': date.getDate(),
      'H+': date.getHours(),
      'm+': date.getMinutes(),
      's+': date.getSeconds(),
      'q+': Math.floor((date.getMonth() + 3) / 3),
      'S+': date.getMilliseconds(), //毫秒
    }
    for (var k in o) {
      if (new RegExp('(' + k + ')').test(fmt)) {
        if (k == 'Y+') {
          fmt = fmt.replace(RegExp.$1, ('' + o[k]).substr(4 - RegExp.$1.length))
        } else if (k == 'S+') {
          var lens = RegExp.$1.length
          lens = lens == 1 ? 3 : lens
          fmt = fmt.replace(RegExp.$1, ('00' + o[k]).substr(('' + o[k]).length - 1, lens))
        } else {
          var v = '' + o[k]
          fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? v : ('00' + v).substr(v.length))
        }
      }
    }
    return fmt
  }
  function toDate(s) {
    if (s instanceof Date) return s
    return new Date(
      s
        .replace(/-/g, '/')
        .replace(/(\.\d+)?/g, '')
        .replace('T', ' ')
    )
  }
  var dayjs = { format: format, toDate: toDate }

  /**
   * @description: 防抖函数
   * @param {Function} fn
   * @param {Number} time
   */
  var timer
  function debounce(fn, time) {
    if (time === void 0) {
      time = 300
    }
    if (typeof fn !== 'function') {
      throw new Error('必须传入一个函数作为参数')
    }
    timer && clearTimeout(timer)
    timer = setTimeout(function () {
      fn()
    }, time)
  }

  function setValue(obj, k, v) {
    obj[k] = v
  }
  /**
   * @desc 深拷贝，支持常见类型
   * @param {any} values
   */
  function deepClone(values) {
    var copy
    if (values === null || typeof values !== 'object') return values
    if (values instanceof Date) {
      copy = new Date()
      copy.setTime(values.getTime())
      return copy
    }
    if (values instanceof Array) {
      copy = []
      for (var i = 0, len = values.length; i < len; i++) {
        copy[i] = deepClone(values[i])
      }
      return copy
    }
    // Handle Object
    if (values instanceof Object) {
      copy = {}
      for (var attr in values) {
        if (values.hasOwnProperty(attr)) {
          setValue(copy, attr, deepClone(values[attr]))
        }
      }
      return copy
    }
    throw new Error("deep clone isn't supported.")
  }

  /**
   * @description: 根据地址下载
   * @param {String} href
   * @param {String} name
   */
  function download(href, name) {
    if (name === void 0) {
      name = Date.now() + '.txt'
    }
    var a = document.createElement('a')
    a.download = name
    a.style.display = 'none'
    a.href = href
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
  }
  /**
   * @description: 下载blob对象
   * @param {Blob} blob
   * @param {String} name
   */
  function downloadBlob(blob, name) {
    var href = URL.createObjectURL(blob)
    download(href, name)
  }
  /**
   * @description: 下载文字
   * @param {String} str
   * @param {String} name
   */
  function downloadStr(str, name) {
    var blob = new Blob([str])
    downloadBlob(blob, name)
  }
  /**
   * @description: 下载图片
   * @param {String} src
   * @param {String} name
   */
  function downloadImage(src, name) {
    if (name === void 0) {
      name = Date.now() + '.png'
    }
    var image = new Image()
    image.setAttribute('crossOrigin', 'anonymous')
    image.src = src
    image.onload = function () {
      var canvas = document.createElement('canvas')
      canvas.width = image.width
      canvas.height = image.height
      var context = canvas.getContext('2d')
      if (context) {
        context.drawImage(image, 0, 0, image.width, image.height)
        var href = canvas.toDataURL('image/png')
        download(href, name)
      }
    }
  }

  var download$1 = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    download: download,
    downloadBlob: downloadBlob,
    downloadStr: downloadStr,
    downloadImage: downloadImage,
  })

  // parentNode 设置document.body全屏拖拽
  var Drag = /** @class */ (function () {
    function Drag(el, onchange, parentNode) {
      if (onchange === void 0) {
        onchange = function () {}
      }
      this.el = el
      this.el = el
      this.parentNode = parentNode || el.parentElement || document.body
      this.onchange = onchange
      this.init(el, onchange)
    }
    Drag.prototype.init = function (el, onchange) {
      this.el = el
      el.style.position = 'absolute'
      el.style.cursor = 'grab'
      if (!this.parentNode) return
      var maxLeft = this.parentNode.clientWidth - el.clientWidth
      var maxTop = this.parentNode.clientHeight - el.clientHeight
      el.onmousedown = function (e) {
        el.style.cursor = 'grabbing'
        var disX = e.clientX - el.offsetLeft
        var disY = e.clientY - el.offsetTop
        document.onmousemove = function (e) {
          //  获取到鼠标拖拽后的横向位移(距离父级元素)
          var l = e.clientX - disX
          //  获取到鼠标拖拽后的纵向位移(距离父级元素)
          var t = e.clientY - disY
          if (!el.style) return
          el.style.left = l + 'px'
          el.style.top = t + 'px'
          if (e.clientX - disX <= 0) {
            el.style.left = 0 + 'px'
          } else if (e.clientX - disX >= maxLeft) {
            el.style.left = maxLeft + 'px'
          }
          if (e.clientY - disY <= 0) {
            el.style.top = 0 + 'px'
          } else if (e.clientY - disY >= maxTop) {
            el.style.top = maxTop + 'px'
          }
          return false
        }
        // 松开事件后，移除事件
        document.onmouseup = function () {
          // 将此时的位置传出去
          document.onmousemove = null
          document.onmouseup = null
          if (el && el.style) {
            el.style.cursor = 'grab'
            onchange({
              x: el.style.left ? el.style.left.replace('px', '') : 0,
              y: el.style.top ? el.style.top.replace('px', '') : 0,
            })
          }
        }
      }
    }
    Drag.prototype.destroy = function () {
      var el = this.el
      if (el && el.onmousedown) {
        el.onmousedown = function () {}
      }
    }
    return Drag
  })()

  /**
   * @desc 隐藏手机号
   * @param {*} str
   * @returns {string}
   */
  function hidePhone(phone) {
    if (phone === void 0) {
      phone = ''
    }
    return phone.toString().replace(/(\d{3})\d{4}(\d{4})/, '$1****$2')
  }
  /**
   * @desc 获取字符串字节
   * @param {*} str
   * @returns {number}
   */
  function byteSize(str) {
    return new Blob([str]).size
  }
  /**
   * @desc html转化防止xs攻击
   * @params str {string}
   * @returns {string}
   */
  function htmlEncode(str) {
    if (str === void 0) {
      str = ''
    }
    return str
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&#x27;')
      .replace(/\//g, '&#x2f;')
  }
  /**
   * @desc 格式化货币
   * @param num {string || number}
   * @returns {string}
   */
  function formatCurrency(num) {
    return (+num || 0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')
  }
  /**
   * @desc   格式化${startTime}距现在的已过时间
   * @param  {Date} startTime
   * @return {String}
   */
  function timeAgo(startTime) {
    var currentTime = new Date().getTime()
    var time = currentTime - dayjs.toDate(startTime).getTime()
    var day = Math.floor(time / (1000 * 60 * 60 * 24))
    var hour = Math.floor(time / (1000 * 60 * 60))
    var min = Math.floor(time / (1000 * 60))
    var month = Math.floor(day / 30)
    var year = Math.floor(month / 12)
    if (year) return year + '年前'
    if (month) return month + '月前'
    if (day) return day + '天前'
    if (hour) return hour + '小时前'
    if (min) return min + '分钟前'
    else return '刚刚'
  }
  /**
   *
   * @desc   格式化现在距${endTime}的剩余时间
   * @param  {Date} endTime
   * @return {String}
   */
  function remainTime(endTime) {
    var startDate = new Date() // 开始时间
    var endDate = dayjs.toDate(endTime) // 结束时间
    var t = endDate.getTime() - startDate.getTime() // 时间差
    var d = 0
    var h = 0
    var m = 0
    var s = 0
    if (t >= 0) {
      d = Math.floor(t / 1000 / 3600 / 24)
      h = Math.floor((t / 1000 / 60 / 60) % 24)
      m = Math.floor((t / 1000 / 60) % 60)
      s = Math.floor((t / 1000) % 60)
    }
    return d + '天 ' + h + '小时 ' + m + '分钟 ' + s + '秒'
  }

  var filter = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    hidePhone: hidePhone,
    byteSize: byteSize,
    htmlEncode: htmlEncode,
    formatCurrency: formatCurrency,
    timeAgo: timeAgo,
    remainTime: remainTime,
  })

  /**
   * @description: 是否全屏
   * @return: Boolean
   */
  function isFullScreen() {
    var fsDoc = document
    return !!(
      fsDoc.fullscreen ||
      fsDoc.webkitIsFullScreen ||
      fsDoc.mozIsFullScreen ||
      fsDoc.msIsFullScreen
    )
  }
  /**
   * @description: 设置全屏
   */
  function setFullScreen() {
    if (isFullScreen()) return
    var ele = document.documentElement
    var requestFullscreen =
      ele.requestFullscreen ||
      ele.webkitRequestFullscreen ||
      ele.msRequestFullscreen ||
      ele.mozRequestFullScreen ||
      null
    requestFullscreen && requestFullscreen.call(ele)
  }
  /**
   * @description: 关闭全屏
   */
  function closeFullScreen() {
    if (!isFullScreen()) return
    var doc = document
    var exitFullscreen =
      doc.exitFullscreen ||
      doc.msExitFullscreen ||
      doc.mozCancelFullScreen ||
      doc.webkitExitFullscreen ||
      null
    exitFullscreen && exitFullscreen.call(doc)
  }
  /**
   * @description: 切换全屏
   */
  function toggleFullScreen() {
    if (isFullScreen()) {
      closeFullScreen()
    } else {
      setFullScreen()
    }
  }
  var fullScreen = {
    is: isFullScreen,
    set: setFullScreen,
    close: closeFullScreen,
    toggle: toggleFullScreen,
  }

  function eleSize(elem) {
    var width,
      height,
      noneNodes = [],
      nodeStyle = []
    getNoneNode(elem) //获取多层display：none;的元素
    setNodeStyle()
    width = elem.clientWidth
    height = elem.clientHeight
    resumeNodeStyle()
    return {
      width: width,
      height: height,
    }
    function getNoneNode(node) {
      if (!node) return
      var display = getStyles(node).getPropertyValue('display'),
        tagName = node.nodeName.toLowerCase()
      if (display != 'none' && tagName != 'body') {
        getNoneNode(node.parentNode)
      } else {
        noneNodes.push(node)
        if (tagName != 'body') getNoneNode(node.parentNode)
      }
    }
    //这方法才能获取最终是否有display属性设置，不能style.display。
    function getStyles(elem) {
      // Support: IE<=11+, Firefox<=30+ (#15098, #14150)
      // IE throws on elements created in popups
      // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
      var view = elem.ownerDocument && elem.ownerDocument.defaultView
      if (!view || !view.opener) {
        view = window
      }
      return view.getComputedStyle(elem)
    }
    function setNodeStyle() {
      var i = 0
      for (; i < noneNodes.length; i++) {
        var visibility = noneNodes[i].style.visibility || '',
          display = noneNodes[i].style.display || '',
          style = noneNodes[i].getAttribute('style')
        //覆盖其他display样式
        noneNodes[i].setAttribute('style', 'visibility:hidden;display:block !important;' + style)
        nodeStyle[i] = {
          visibility: visibility,
          display: display,
        }
      }
    }
    function resumeNodeStyle() {
      for (var i = 0; i < noneNodes.length; i++) {
        var cStyle = nodeStyle[i]
        var visibility = cStyle.visibility,
          display = cStyle.display
        noneNodes[i].style.visibility = visibility
        noneNodes[i].style.display = display
      }
    }
  }

  /**
   * 预加载图片
   * @params {array} images 图片地址
   */
  function preloadImage(srcArr) {
    if (srcArr === void 0) {
      srcArr = []
    }
    return new Promise(function (resolve) {
      var images = Array.from(new Set(srcArr))
      var loaded = []
      var _loop_1 = function (i) {
        var img = new Image()
        img.src = images[i]
        var push = function () {
          loaded.push(img.src)
          if (loaded.length >= images.length) {
            resolve(loaded)
          }
        }
        img.onload = push
        img.onerror = push
      }
      for (var i = 0; i < images.length; i++) {
        _loop_1(i)
      }
    })
  }
  /**
   * @description: 获取本地图片文件尺寸
   * @param {File} file
   * @return: Promise<{widh: string, height: string}>
   */
  function getFileImageSize(file) {
    return new Promise(function (resolve) {
      if (!file) return resolve(null) // 没有选择图片，直接return
      if (!/^image\/[jpeg|png|jpg|gif|svg|ico]/gi.test(file.type)) {
        console.error('文件类型不是图片')
        return resolve(null)
      }
      var img = new Image()
      img.src = URL.createObjectURL(file)
      img.onload = function () {
        var width = img.width,
          height = img.height
        resolve({
          width: width,
          height: height,
        })
      }
      img.onerror = function () {
        return resolve(null)
      }
    })
  }

  var imgUtil = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    preloadImage: preloadImage,
    getFileImageSize: getFileImageSize,
  })

  /**
   * 设置localStorage过期时间
   * @param key{string}
   * @param value{string}
   * @param maxAge{number} 分钟 (默认7天)
   */
  function setLocalData(key, value, maxAge) {
    if (maxAge === void 0) {
      maxAge = 60 * 24 * 7
    }
    var data = {
      value: value,
      maxAge: maxAge * 60000,
      timestamp: Date.now(),
    }
    localStorage.setItem(key, JSON.stringify(data))
  }
  /**
   * 获取本地localData
   * @param key{string}
   */
  function getLocalData(key) {
    try {
      var dataStr = localStorage.getItem(key)
      if (!dataStr) return null
      var _a = JSON.parse(dataStr),
        value = _a.value,
        maxAge = _a.maxAge,
        timestamp = _a.timestamp
      var data = maxAge + timestamp > Date.now() ? value : null
      if (!data) localStorage.removeItem(key) // 超时删除缓存
      return data
    } catch (e) {
      console.error(e)
      localStorage.removeItem(key)
      return null
    }
  }
  /**
   * 删除本地localData
   * @param key{string}
   */
  function clearLocalData(key) {
    localStorage.remove(key)
  }
  /**
   * 创建localStorage缓存,用于用户信息
   * @param key{string}
   * @param maxAge{number} 分钟 (默认1天)
   */
  function createCache(key, maxAge) {
    if (maxAge === void 0) {
      maxAge = 60 * 24
    }
    return {
      get: function () {
        return getLocalData(key)
      },
      set: function (data) {
        console.log(
          'localData\u5B58\u5165' + key + '\u6709\u6548\u65F6\u95F4\uFF1A' + maxAge + '\u5206\u949F'
        )
        setLocalData(key, data, maxAge)
      },
      clear: function () {
        localStorage.removeItem(key)
      },
    }
  }
  var localData = {
    get: getLocalData,
    set: setLocalData,
    clear: clearLocalData,
    create: createCache,
  }

  var timer$1
  /**
   * @description: 函数节流
   * @param {fn} Function
   * @param {time} Number 截流时间
   */
  function throttle(fn, time) {
    if (time === void 0) {
      time = 300
    }
    if (typeof fn !== 'function') {
      throw new Error('必须传入一个函数作为参数')
    }
    if (!timer$1) {
      timer$1 = window.setTimeout(function () {
        fn()
        timer$1 = 0
      }, time)
    }
  }

  var LoadMore = /** @class */ (function () {
    function LoadMore(toLoadMore) {
      if (toLoadMore === void 0) {
        toLoadMore = function () {}
      }
      // 加载更多
      this.loadMoreFn = function () {
        var ele = document.documentElement
        var bo = document.body
        var clientHeight = ele.clientHeight || bo.clientHeight
        var scrollTop = ele.scrollTop || bo.scrollTop
        var scrollHeight = bo.scrollHeight || ele.scrollHeight
        if (scrollTop + clientHeight >= scrollHeight - 80) {
          throttle(toLoadMore)
        }
      }
      // 绑定事件
      window.addEventListener('scroll', this.loadMoreFn)
    }
    // 取消监听
    LoadMore.prototype.destroy = function () {
      if (this.loadMoreFn) {
        window.removeEventListener('scroll', this.loadMoreFn)
        this.loadMoreFn = null
      }
    }
    return LoadMore
  })()

  var top = 0
  /**
   * 锁定滚动
   * @param key{string}
   * @param value{string}
   * @param maxAge{number} 分钟 (默认7天)
   */
  function lock(shouldLock) {
    if (shouldLock === void 0) {
      shouldLock = true
    }
    var bodyEl = document.body
    if (shouldLock) {
      if (bodyEl.style.position === 'fixed') return
      top = window.scrollY
      bodyEl.style.position = 'fixed'
      bodyEl.style.top = '-' + top + 'px'
      bodyEl.style.width = '100%'
    } else {
      bodyEl.style.position = ''
      bodyEl.style.top = ''
      bodyEl.style.width = ''
      window.scrollTo(0, top) // 回到原先的top
    }
  }

  /**
   * 加
   * @param {number} arg1
   * @param {number} arg2
   */
  function add(arg1, arg2) {
    var r1, r2
    try {
      r1 = arg1.toString().split('.')[1].length
    } catch (e) {
      r1 = 0
    }
    try {
      r2 = arg2.toString().split('.')[1].length
    } catch (e) {
      r2 = 0
    }
    var c = Math.abs(r1 - r2)
    var m = Math.pow(10, Math.max(r1, r2))
    if (c > 0) {
      var cm = Math.pow(10, c)
      if (r1 > r2) {
        arg1 = Number(arg1.toString().replace('.', ''))
        arg2 = Number(arg2.toString().replace('.', '')) * cm
      } else {
        arg1 = Number(arg1.toString().replace('.', '')) * cm
        arg2 = Number(arg2.toString().replace('.', ''))
      }
    } else {
      arg1 = Number(arg1.toString().replace('.', ''))
      arg2 = Number(arg2.toString().replace('.', ''))
    }
    return (arg1 + arg2) / m
  }
  /**
   * 减
   * @param {number} arg1
   * @param {number} arg2
   */
  function sub(arg1, arg2) {
    var r1, r2
    try {
      r1 = arg1.toString().split('.')[1].length
    } catch (e) {
      r1 = 0
    }
    try {
      r2 = arg2.toString().split('.')[1].length
    } catch (e) {
      r2 = 0
    }
    var m = Math.pow(10, Math.max(r1, r2)) // last modify by deeka 动态控制精度长度
    var n = r1 >= r2 ? r1 : r2
    return ((arg1 * m - arg2 * m) / m).toFixed(n)
  }
  /**
   * 乘
   * @param {number} arg1
   * @param {number} arg2
   */
  function mul(arg1, arg2) {
    var m = 0,
      s1 = arg1.toString(),
      s2 = arg2.toString()
    try {
      m += s1.split('.')[1].length
    } catch (e) {}
    try {
      m += s2.split('.')[1].length
    } catch (e) {}
    return (Number(s1.replace('.', '')) * Number(s2.replace('.', ''))) / Math.pow(10, m)
  }
  /**
   * 除
   * @param {number} arg1
   * @param {number} arg2
   */
  function div(arg1, arg2) {
    var t1 = 0,
      t2 = 0
    try {
      t1 = arg1.toString().split('.')[1].length
    } catch (e) {}
    try {
      t2 = arg2.toString().split('.')[1].length
    } catch (e) {}
    var r1 = Number(arg1.toString().replace('.', ''))
    var r2 = Number(arg2.toString().replace('.', ''))
    return r1 / (r2 * Math.pow(10, t1 - t2))
  }

  var mathUtil = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    add: add,
    sub: sub,
    mul: mul,
    div: div,
  })

  /**
   *
   * @param name {string}
   * @param search {string}  [a=1&b=2]
   * @returns {string || null}
   */
  function get(name, search) {
    if (search === void 0) {
      search = window.location.href.split('?')[1]
    }
    var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)')
    var r = (search || '').match(reg)
    if (r != null) return decodeURIComponent(r[2]) // unescape （w3c推荐使用decodeURI() 和 decodeURIComponent()）
    return null
  }
  /**
   * @desc   url参数转对象
   * @param  {String} search  default: window.location.href
   * @return {Object}
   */
  function parse(search) {
    if (search === void 0) {
      search = window.location.href.split('?')[1]
    }
    if (!search) return {}
    return decodeURIComponent(search)
      .split('&')
      .reduce(function (obj, item) {
        var _a = item.split('='),
          _b = _a[0],
          key = _b === void 0 ? '' : _b,
          _c = _a[1],
          value = _c === void 0 ? '' : _c
        obj[key] = value
        return obj
      }, {})
  }
  /**
   * @desc   对象序列化
   * @param  {Object} obj
   * @return {String}
   */
  function stringify(obj) {
    if (!obj) return ''
    var pairs = []
    for (var key in obj) {
      var value = obj[key]
      if (value instanceof Array) {
        for (var i = 0; i < value.length; ++i) {
          var arrStr = key + '[' + i + ']=' + encodeURIComponent(value[i])
          pairs.push(arrStr)
        }
        continue
      }
      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]))
    }
    return pairs.join('&')
  }
  var qs = {
    get: get,
    parse: parse,
    stringify: stringify,
  }

  /**
   * @description: rem适配，以设计稿750px、字体大小100px为标准
   * @param {Number}
   */
  var rem = function (size) {
    if (size === void 0) {
      size = 750
    }
    if (typeof window === 'undefined') return
    function adjust() {
      document.documentElement.style.fontSize =
        Math.min(100, 100 * (document.documentElement.clientWidth / size)) + 'px'
    }
    adjust()
    window.addEventListener(
      'orientationchange' in window ? 'orientationchange' : 'resize',
      adjust,
      false
    )
  }

  /**
   * 动画轨迹
   * @param {Number} t currentTime
   * @param {Number} b start
   * @param {Number} c change
   * @param {Number} d duration
   */
  function easeInOut(t, b, c, d) {
    t /= d / 2
    if (t < 1) {
      return (c / 2) * t * t + b
    }
    t--
    return (-c / 2) * (t * (t - 2) - 1) + b
  }
  /**
   * 设置滚动
   * @param {number} top
   */
  function move(top) {
    document.documentElement.scrollTop = top
    document.body.scrollTop = top
  }
  /**
   * 光滑滚动
   * @param {Number} to 滚动目标距离
   * @param {Number} duration 滚动时间
   * @param {Function} callback
   * @return:
   */
  var smoothScroll = function (to, duration, callback) {
    if (duration === void 0) {
      duration = 150
    }
    var start = document.documentElement.scrollTop || document.body.scrollTop
    var change = to - start
    var increment = 10
    var currentTime = 0
    var animateScroll = function () {
      currentTime += increment
      var val = easeInOut(currentTime, start, change, duration)
      // 设置滚动
      move(val)
      if (currentTime < duration && Math.abs(to - start) > 2) {
        requestAnimationFrame(animateScroll)
      } else {
        typeof callback === 'function' && callback()
      }
    }
    animateScroll()
  }

  /**
   * https://github.com/ovenslove/vue-mdEditor/blob/master/static/js/rangeFn.js
   */
  /**
   * 获取光标位置
   * @param {HTMLElement} textDom
   */
  function getCursortPosition(textDom) {
    var cursorPos = 0
    var d = document
    if (d.selection) {
      // IE Support
      textDom.focus()
      var selectRange = d.selection.createRange()
      selectRange.moveStart('character', -textDom.value.length)
      cursorPos = selectRange.text.length
    } else if (textDom.selectionStart || textDom.selectionStart === 0) {
      // Firefox support
      cursorPos = textDom.selectionStart
    }
    return cursorPos
  }
  /**
   * 设置光标位置
   * @param {HTMLElement} textDom
   * @param {Number} pos
   */
  function setCursorPosition(textDom, pos) {
    if (textDom.setSelectionRange) {
      // IE Support
      textDom.focus()
      textDom.setSelectionRange(pos, pos)
    } else if (textDom.createTextRange) {
      // Firefox support
      if (!textDom.createTextRange) return
      var range = textDom.createTextRange()
      range.collapse(true)
      range.moveEnd('character', pos)
      range.moveStart('character', pos)
      range.select()
    }
  }
  /**
   * 获取选中文字
   */
  function getSelectText() {
    var userSelection,
      text = '',
      d = document
    if (window.getSelection) {
      // Firefox support
      userSelection = window.getSelection()
      text = userSelection ? userSelection.toString() : ''
    } else if (d.selection) {
      // IE Support
      userSelection = d.selection.createRange()
      text = userSelection.text
    }
    return text
  }
  /**
   * 选中特定范围的文本
   * @param {HTMLElement} textDom
   * @param {Number} startPos
   * @param {Number} endPos
   */
  function setSelectText(textDom, startPos, endPos) {
    startPos = Number(startPos)
    endPos = Number(endPos)
    var textLength = textDom.value.length
    if (textLength) {
      if (!startPos) {
        startPos = 0
      }
      if (!endPos) {
        endPos = textLength
      }
      if (startPos > textLength) {
        startPos = textLength
      }
      if (endPos > textLength) {
        endPos = textLength
      }
      if (startPos < 0) {
        startPos = textLength + startPos
      }
      if (endPos < 0) {
        endPos = textLength + endPos
      }
      if (textDom.createTextRange) {
        // IE Support
        var range = textDom.createTextRange()
        range.moveStart('character', -textLength)
        range.moveEnd('character', -textLength)
        range.moveStart('character', startPos)
        range.moveEnd('character', endPos)
        range.select()
      } else {
        // Firefox support
        textDom.setSelectionRange(startPos, endPos)
        textDom.focus()
      }
    }
  }
  /**
   * 在光标后插入文本
   * @param {HTMLElement} textDom
   * @param {String} value
   */
  function insertAfterText(textDom, value) {
    var selectRange
    var d = document
    if (d.selection) {
      // IE Support
      textDom.focus()
      selectRange = d.selection.createRange()
      selectRange.text = value
      textDom.focus()
    } else if (textDom.selectionStart || textDom.selectionStart === 0) {
      // Firefox support
      var startPos = textDom.selectionStart || 0
      var endPos = textDom.selectionEnd || 0
      var scrollTop = textDom.scrollTop
      textDom.value =
        textDom.value.substring(0, startPos) +
        value +
        textDom.value.substring(endPos, textDom.value.length)
      textDom.focus()
      textDom.selectionStart = startPos + value.length
      textDom.selectionEnd = startPos + value.length
      textDom.scrollTop = scrollTop
    } else {
      textDom.value += value
      textDom.focus()
    }
  }

  var selectRange = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    getCursortPosition: getCursortPosition,
    setCursorPosition: setCursorPosition,
    getSelectText: getSelectText,
    setSelectText: setSelectText,
    insertAfterText: insertAfterText,
  })

  var speaker
  var win$1 = window
  // 停止语音
  function stop() {
    if (win$1.speechSynthesis) {
      win$1.speechSynthesis.cancel()
    }
  }
  // 播放语音
  function speak(text) {
    stop()
    if (!speaker && win$1.SpeechSynthesisUtterance) {
      speaker = new win$1.SpeechSynthesisUtterance()
    }
    if (speaker) {
      speaker.text = text
      win$1.speechSynthesis.speak(speaker)
    }
  }
  // 监听语音结束
  function onend(callback) {
    if (callback === void 0) {
      callback = function () {}
    }
    if (!speaker && win$1.SpeechSynthesisUtterance) {
      speaker = new win$1.SpeechSynthesisUtterance()
    }
    speaker && (speaker.onend = callback)
  }
  var speaker$1 = {
    speak: speak,
    stop: stop,
    onend: onend,
  }

  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */

  var __assign = function () {
    __assign =
      Object.assign ||
      function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i]
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p]
        }
        return t
      }
    return __assign.apply(this, arguments)
  }

  function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P
        ? value
        : new P(function (resolve) {
            resolve(value)
          })
    }
    return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value))
        } catch (e) {
          reject(e)
        }
      }
      function rejected(value) {
        try {
          step(generator['throw'](value))
        } catch (e) {
          reject(e)
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected)
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next())
    })
  }

  function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function () {
          if (t[0] & 1) throw t[1]
          return t[1]
        },
        trys: [],
        ops: [],
      },
      f,
      y,
      t,
      g
    return (
      (g = { next: verb(0), throw: verb(1), return: verb(2) }),
      typeof Symbol === 'function' &&
        (g[Symbol.iterator] = function () {
          return this
        }),
      g
    )
    function verb(n) {
      return function (v) {
        return step([n, v])
      }
    }
    function step(op) {
      if (f) throw new TypeError('Generator is already executing.')
      while (_)
        try {
          if (
            ((f = 1),
            y &&
              (t =
                op[0] & 2
                  ? y['return']
                  : op[0]
                  ? y['throw'] || ((t = y['return']) && t.call(y), 0)
                  : y.next) &&
              !(t = t.call(y, op[1])).done)
          )
            return t
          if (((y = 0), t)) op = [op[0] & 2, t.value]
          switch (op[0]) {
            case 0:
            case 1:
              t = op
              break
            case 4:
              _.label++
              return { value: op[1], done: false }
            case 5:
              _.label++
              y = op[1]
              op = [0]
              continue
            case 7:
              op = _.ops.pop()
              _.trys.pop()
              continue
            default:
              if (
                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&
                (op[0] === 6 || op[0] === 2)
              ) {
                _ = 0
                continue
              }
              if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                _.label = op[1]
                break
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1]
                t = op
                break
              }
              if (t && _.label < t[2]) {
                _.label = t[2]
                _.ops.push(op)
                break
              }
              if (t[2]) _.ops.pop()
              _.trys.pop()
              continue
          }
          op = body.call(thisArg, _)
        } catch (e) {
          op = [6, e]
          y = 0
        } finally {
          f = t = 0
        }
      if (op[0] & 5) throw op[1]
      return { value: op[0] ? op[1] : void 0, done: true }
    }
  }

  function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j]
    return r
  }

  function createCommonjsModule(fn, basedir, module) {
    return (
      (module = {
        path: basedir,
        exports: {},
        require: function (path, base) {
          return commonjsRequire(path, base === undefined || base === null ? module.path : base)
        },
      }),
      fn(module, module.exports),
      module.exports
    )
  }

  function commonjsRequire() {
    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs')
  }

  var sparkMd5 = createCommonjsModule(function (module, exports) {
    ;(function (factory) {
      {
        // Node/CommonJS
        module.exports = factory()
      }
    })(function (undefined$1) {
      /*
       * Fastest md5 implementation around (JKM md5).
       * Credits: Joseph Myers
       *
       * @see http://www.myersdaily.org/joseph/javascript/md5-text.html
       * @see http://jsperf.com/md5-shootout/7
       */

      /* this function is much faster,
        so if possible we use it. Some IEs
        are the only ones I know of that
        need the idiotic second function,
        generated by an if clause.  */
      var hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']

      function md5cycle(x, k) {
        var a = x[0],
          b = x[1],
          c = x[2],
          d = x[3]

        a += (((b & c) | (~b & d)) + k[0] - 680876936) | 0
        a = (((a << 7) | (a >>> 25)) + b) | 0
        d += (((a & b) | (~a & c)) + k[1] - 389564586) | 0
        d = (((d << 12) | (d >>> 20)) + a) | 0
        c += (((d & a) | (~d & b)) + k[2] + 606105819) | 0
        c = (((c << 17) | (c >>> 15)) + d) | 0
        b += (((c & d) | (~c & a)) + k[3] - 1044525330) | 0
        b = (((b << 22) | (b >>> 10)) + c) | 0
        a += (((b & c) | (~b & d)) + k[4] - 176418897) | 0
        a = (((a << 7) | (a >>> 25)) + b) | 0
        d += (((a & b) | (~a & c)) + k[5] + 1200080426) | 0
        d = (((d << 12) | (d >>> 20)) + a) | 0
        c += (((d & a) | (~d & b)) + k[6] - 1473231341) | 0
        c = (((c << 17) | (c >>> 15)) + d) | 0
        b += (((c & d) | (~c & a)) + k[7] - 45705983) | 0
        b = (((b << 22) | (b >>> 10)) + c) | 0
        a += (((b & c) | (~b & d)) + k[8] + 1770035416) | 0
        a = (((a << 7) | (a >>> 25)) + b) | 0
        d += (((a & b) | (~a & c)) + k[9] - 1958414417) | 0
        d = (((d << 12) | (d >>> 20)) + a) | 0
        c += (((d & a) | (~d & b)) + k[10] - 42063) | 0
        c = (((c << 17) | (c >>> 15)) + d) | 0
        b += (((c & d) | (~c & a)) + k[11] - 1990404162) | 0
        b = (((b << 22) | (b >>> 10)) + c) | 0
        a += (((b & c) | (~b & d)) + k[12] + 1804603682) | 0
        a = (((a << 7) | (a >>> 25)) + b) | 0
        d += (((a & b) | (~a & c)) + k[13] - 40341101) | 0
        d = (((d << 12) | (d >>> 20)) + a) | 0
        c += (((d & a) | (~d & b)) + k[14] - 1502002290) | 0
        c = (((c << 17) | (c >>> 15)) + d) | 0
        b += (((c & d) | (~c & a)) + k[15] + 1236535329) | 0
        b = (((b << 22) | (b >>> 10)) + c) | 0

        a += (((b & d) | (c & ~d)) + k[1] - 165796510) | 0
        a = (((a << 5) | (a >>> 27)) + b) | 0
        d += (((a & c) | (b & ~c)) + k[6] - 1069501632) | 0
        d = (((d << 9) | (d >>> 23)) + a) | 0
        c += (((d & b) | (a & ~b)) + k[11] + 643717713) | 0
        c = (((c << 14) | (c >>> 18)) + d) | 0
        b += (((c & a) | (d & ~a)) + k[0] - 373897302) | 0
        b = (((b << 20) | (b >>> 12)) + c) | 0
        a += (((b & d) | (c & ~d)) + k[5] - 701558691) | 0
        a = (((a << 5) | (a >>> 27)) + b) | 0
        d += (((a & c) | (b & ~c)) + k[10] + 38016083) | 0
        d = (((d << 9) | (d >>> 23)) + a) | 0
        c += (((d & b) | (a & ~b)) + k[15] - 660478335) | 0
        c = (((c << 14) | (c >>> 18)) + d) | 0
        b += (((c & a) | (d & ~a)) + k[4] - 405537848) | 0
        b = (((b << 20) | (b >>> 12)) + c) | 0
        a += (((b & d) | (c & ~d)) + k[9] + 568446438) | 0
        a = (((a << 5) | (a >>> 27)) + b) | 0
        d += (((a & c) | (b & ~c)) + k[14] - 1019803690) | 0
        d = (((d << 9) | (d >>> 23)) + a) | 0
        c += (((d & b) | (a & ~b)) + k[3] - 187363961) | 0
        c = (((c << 14) | (c >>> 18)) + d) | 0
        b += (((c & a) | (d & ~a)) + k[8] + 1163531501) | 0
        b = (((b << 20) | (b >>> 12)) + c) | 0
        a += (((b & d) | (c & ~d)) + k[13] - 1444681467) | 0
        a = (((a << 5) | (a >>> 27)) + b) | 0
        d += (((a & c) | (b & ~c)) + k[2] - 51403784) | 0
        d = (((d << 9) | (d >>> 23)) + a) | 0
        c += (((d & b) | (a & ~b)) + k[7] + 1735328473) | 0
        c = (((c << 14) | (c >>> 18)) + d) | 0
        b += (((c & a) | (d & ~a)) + k[12] - 1926607734) | 0
        b = (((b << 20) | (b >>> 12)) + c) | 0

        a += ((b ^ c ^ d) + k[5] - 378558) | 0
        a = (((a << 4) | (a >>> 28)) + b) | 0
        d += ((a ^ b ^ c) + k[8] - 2022574463) | 0
        d = (((d << 11) | (d >>> 21)) + a) | 0
        c += ((d ^ a ^ b) + k[11] + 1839030562) | 0
        c = (((c << 16) | (c >>> 16)) + d) | 0
        b += ((c ^ d ^ a) + k[14] - 35309556) | 0
        b = (((b << 23) | (b >>> 9)) + c) | 0
        a += ((b ^ c ^ d) + k[1] - 1530992060) | 0
        a = (((a << 4) | (a >>> 28)) + b) | 0
        d += ((a ^ b ^ c) + k[4] + 1272893353) | 0
        d = (((d << 11) | (d >>> 21)) + a) | 0
        c += ((d ^ a ^ b) + k[7] - 155497632) | 0
        c = (((c << 16) | (c >>> 16)) + d) | 0
        b += ((c ^ d ^ a) + k[10] - 1094730640) | 0
        b = (((b << 23) | (b >>> 9)) + c) | 0
        a += ((b ^ c ^ d) + k[13] + 681279174) | 0
        a = (((a << 4) | (a >>> 28)) + b) | 0
        d += ((a ^ b ^ c) + k[0] - 358537222) | 0
        d = (((d << 11) | (d >>> 21)) + a) | 0
        c += ((d ^ a ^ b) + k[3] - 722521979) | 0
        c = (((c << 16) | (c >>> 16)) + d) | 0
        b += ((c ^ d ^ a) + k[6] + 76029189) | 0
        b = (((b << 23) | (b >>> 9)) + c) | 0
        a += ((b ^ c ^ d) + k[9] - 640364487) | 0
        a = (((a << 4) | (a >>> 28)) + b) | 0
        d += ((a ^ b ^ c) + k[12] - 421815835) | 0
        d = (((d << 11) | (d >>> 21)) + a) | 0
        c += ((d ^ a ^ b) + k[15] + 530742520) | 0
        c = (((c << 16) | (c >>> 16)) + d) | 0
        b += ((c ^ d ^ a) + k[2] - 995338651) | 0
        b = (((b << 23) | (b >>> 9)) + c) | 0

        a += ((c ^ (b | ~d)) + k[0] - 198630844) | 0
        a = (((a << 6) | (a >>> 26)) + b) | 0
        d += ((b ^ (a | ~c)) + k[7] + 1126891415) | 0
        d = (((d << 10) | (d >>> 22)) + a) | 0
        c += ((a ^ (d | ~b)) + k[14] - 1416354905) | 0
        c = (((c << 15) | (c >>> 17)) + d) | 0
        b += ((d ^ (c | ~a)) + k[5] - 57434055) | 0
        b = (((b << 21) | (b >>> 11)) + c) | 0
        a += ((c ^ (b | ~d)) + k[12] + 1700485571) | 0
        a = (((a << 6) | (a >>> 26)) + b) | 0
        d += ((b ^ (a | ~c)) + k[3] - 1894986606) | 0
        d = (((d << 10) | (d >>> 22)) + a) | 0
        c += ((a ^ (d | ~b)) + k[10] - 1051523) | 0
        c = (((c << 15) | (c >>> 17)) + d) | 0
        b += ((d ^ (c | ~a)) + k[1] - 2054922799) | 0
        b = (((b << 21) | (b >>> 11)) + c) | 0
        a += ((c ^ (b | ~d)) + k[8] + 1873313359) | 0
        a = (((a << 6) | (a >>> 26)) + b) | 0
        d += ((b ^ (a | ~c)) + k[15] - 30611744) | 0
        d = (((d << 10) | (d >>> 22)) + a) | 0
        c += ((a ^ (d | ~b)) + k[6] - 1560198380) | 0
        c = (((c << 15) | (c >>> 17)) + d) | 0
        b += ((d ^ (c | ~a)) + k[13] + 1309151649) | 0
        b = (((b << 21) | (b >>> 11)) + c) | 0
        a += ((c ^ (b | ~d)) + k[4] - 145523070) | 0
        a = (((a << 6) | (a >>> 26)) + b) | 0
        d += ((b ^ (a | ~c)) + k[11] - 1120210379) | 0
        d = (((d << 10) | (d >>> 22)) + a) | 0
        c += ((a ^ (d | ~b)) + k[2] + 718787259) | 0
        c = (((c << 15) | (c >>> 17)) + d) | 0
        b += ((d ^ (c | ~a)) + k[9] - 343485551) | 0
        b = (((b << 21) | (b >>> 11)) + c) | 0

        x[0] = (a + x[0]) | 0
        x[1] = (b + x[1]) | 0
        x[2] = (c + x[2]) | 0
        x[3] = (d + x[3]) | 0
      }

      function md5blk(s) {
        var md5blks = [],
          i /* Andy King said do it this way. */

        for (i = 0; i < 64; i += 4) {
          md5blks[i >> 2] =
            s.charCodeAt(i) +
            (s.charCodeAt(i + 1) << 8) +
            (s.charCodeAt(i + 2) << 16) +
            (s.charCodeAt(i + 3) << 24)
        }
        return md5blks
      }

      function md5blk_array(a) {
        var md5blks = [],
          i /* Andy King said do it this way. */

        for (i = 0; i < 64; i += 4) {
          md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24)
        }
        return md5blks
      }

      function md51(s) {
        var n = s.length,
          state = [1732584193, -271733879, -1732584194, 271733878],
          i,
          length,
          tail,
          tmp,
          lo,
          hi

        for (i = 64; i <= n; i += 64) {
          md5cycle(state, md5blk(s.substring(i - 64, i)))
        }
        s = s.substring(i - 64)
        length = s.length
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3)
        }
        tail[i >> 2] |= 0x80 << (i % 4 << 3)
        if (i > 55) {
          md5cycle(state, tail)
          for (i = 0; i < 16; i += 1) {
            tail[i] = 0
          }
        }

        // Beware that the final length might not fit in 32 bits so we take care of that
        tmp = n * 8
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/)
        lo = parseInt(tmp[2], 16)
        hi = parseInt(tmp[1], 16) || 0

        tail[14] = lo
        tail[15] = hi

        md5cycle(state, tail)
        return state
      }

      function md51_array(a) {
        var n = a.length,
          state = [1732584193, -271733879, -1732584194, 271733878],
          i,
          length,
          tail,
          tmp,
          lo,
          hi

        for (i = 64; i <= n; i += 64) {
          md5cycle(state, md5blk_array(a.subarray(i - 64, i)))
        }

        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1
        // containing the last element of the parent array if the sub array specified starts
        // beyond the length of the parent array - weird.
        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue
        a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0)

        length = a.length
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= a[i] << (i % 4 << 3)
        }

        tail[i >> 2] |= 0x80 << (i % 4 << 3)
        if (i > 55) {
          md5cycle(state, tail)
          for (i = 0; i < 16; i += 1) {
            tail[i] = 0
          }
        }

        // Beware that the final length might not fit in 32 bits so we take care of that
        tmp = n * 8
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/)
        lo = parseInt(tmp[2], 16)
        hi = parseInt(tmp[1], 16) || 0

        tail[14] = lo
        tail[15] = hi

        md5cycle(state, tail)

        return state
      }

      function rhex(n) {
        var s = '',
          j
        for (j = 0; j < 4; j += 1) {
          s += hex_chr[(n >> (j * 8 + 4)) & 0x0f] + hex_chr[(n >> (j * 8)) & 0x0f]
        }
        return s
      }

      function hex(x) {
        var i
        for (i = 0; i < x.length; i += 1) {
          x[i] = rhex(x[i])
        }
        return x.join('')
      }

      // In some cases the fast add32 function cannot be used..
      if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592');

      // ---------------------------------------------------

      /**
       * ArrayBuffer slice polyfill.
       *
       * @see https://github.com/ttaubert/node-arraybuffer-slice
       */

      if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {
        ;(function () {
          function clamp(val, length) {
            val = val | 0 || 0

            if (val < 0) {
              return Math.max(val + length, 0)
            }

            return Math.min(val, length)
          }

          ArrayBuffer.prototype.slice = function (from, to) {
            var length = this.byteLength,
              begin = clamp(from, length),
              end = length,
              num,
              target,
              targetArray,
              sourceArray

            if (to !== undefined$1) {
              end = clamp(to, length)
            }

            if (begin > end) {
              return new ArrayBuffer(0)
            }

            num = end - begin
            target = new ArrayBuffer(num)
            targetArray = new Uint8Array(target)

            sourceArray = new Uint8Array(this, begin, num)
            targetArray.set(sourceArray)

            return target
          }
        })()
      }

      // ---------------------------------------------------

      /**
       * Helpers.
       */

      function toUtf8(str) {
        if (/[\u0080-\uFFFF]/.test(str)) {
          str = unescape(encodeURIComponent(str))
        }

        return str
      }

      function utf8Str2ArrayBuffer(str, returnUInt8Array) {
        var length = str.length,
          buff = new ArrayBuffer(length),
          arr = new Uint8Array(buff),
          i

        for (i = 0; i < length; i += 1) {
          arr[i] = str.charCodeAt(i)
        }

        return returnUInt8Array ? arr : buff
      }

      function arrayBuffer2Utf8Str(buff) {
        return String.fromCharCode.apply(null, new Uint8Array(buff))
      }

      function concatenateArrayBuffers(first, second, returnUInt8Array) {
        var result = new Uint8Array(first.byteLength + second.byteLength)

        result.set(new Uint8Array(first))
        result.set(new Uint8Array(second), first.byteLength)

        return returnUInt8Array ? result : result.buffer
      }

      function hexToBinaryString(hex) {
        var bytes = [],
          length = hex.length,
          x

        for (x = 0; x < length - 1; x += 2) {
          bytes.push(parseInt(hex.substr(x, 2), 16))
        }

        return String.fromCharCode.apply(String, bytes)
      }

      // ---------------------------------------------------

      /**
       * SparkMD5 OOP implementation.
       *
       * Use this class to perform an incremental md5, otherwise use the
       * static methods instead.
       */

      function SparkMD5() {
        // call reset to init the instance
        this.reset()
      }

      /**
       * Appends a string.
       * A conversion will be applied if an utf8 string is detected.
       *
       * @param {String} str The string to be appended
       *
       * @return {SparkMD5} The instance itself
       */
      SparkMD5.prototype.append = function (str) {
        // Converts the string to utf8 bytes if necessary
        // Then append as binary
        this.appendBinary(toUtf8(str))

        return this
      }

      /**
       * Appends a binary string.
       *
       * @param {String} contents The binary string to be appended
       *
       * @return {SparkMD5} The instance itself
       */
      SparkMD5.prototype.appendBinary = function (contents) {
        this._buff += contents
        this._length += contents.length

        var length = this._buff.length,
          i

        for (i = 64; i <= length; i += 64) {
          md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)))
        }

        this._buff = this._buff.substring(i - 64)

        return this
      }

      /**
       * Finishes the incremental computation, reseting the internal state and
       * returning the result.
       *
       * @param {Boolean} raw True to get the raw string, false to get the hex string
       *
       * @return {String} The result
       */
      SparkMD5.prototype.end = function (raw) {
        var buff = this._buff,
          length = buff.length,
          i,
          tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          ret

        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3)
        }

        this._finish(tail, length)
        ret = hex(this._hash)

        if (raw) {
          ret = hexToBinaryString(ret)
        }

        this.reset()

        return ret
      }

      /**
       * Resets the internal state of the computation.
       *
       * @return {SparkMD5} The instance itself
       */
      SparkMD5.prototype.reset = function () {
        this._buff = ''
        this._length = 0
        this._hash = [1732584193, -271733879, -1732584194, 271733878]

        return this
      }

      /**
       * Gets the internal state of the computation.
       *
       * @return {Object} The state
       */
      SparkMD5.prototype.getState = function () {
        return {
          buff: this._buff,
          length: this._length,
          hash: this._hash.slice(),
        }
      }

      /**
       * Gets the internal state of the computation.
       *
       * @param {Object} state The state
       *
       * @return {SparkMD5} The instance itself
       */
      SparkMD5.prototype.setState = function (state) {
        this._buff = state.buff
        this._length = state.length
        this._hash = state.hash

        return this
      }

      /**
       * Releases memory used by the incremental buffer and other additional
       * resources. If you plan to use the instance again, use reset instead.
       */
      SparkMD5.prototype.destroy = function () {
        delete this._hash
        delete this._buff
        delete this._length
      }

      /**
       * Finish the final calculation based on the tail.
       *
       * @param {Array}  tail   The tail (will be modified)
       * @param {Number} length The length of the remaining buffer
       */
      SparkMD5.prototype._finish = function (tail, length) {
        var i = length,
          tmp,
          lo,
          hi

        tail[i >> 2] |= 0x80 << (i % 4 << 3)
        if (i > 55) {
          md5cycle(this._hash, tail)
          for (i = 0; i < 16; i += 1) {
            tail[i] = 0
          }
        }

        // Do the final computation based on the tail and length
        // Beware that the final length may not fit in 32 bits so we take care of that
        tmp = this._length * 8
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/)
        lo = parseInt(tmp[2], 16)
        hi = parseInt(tmp[1], 16) || 0

        tail[14] = lo
        tail[15] = hi
        md5cycle(this._hash, tail)
      }

      /**
       * Performs the md5 hash on a string.
       * A conversion will be applied if utf8 string is detected.
       *
       * @param {String}  str The string
       * @param {Boolean} [raw] True to get the raw string, false to get the hex string
       *
       * @return {String} The result
       */
      SparkMD5.hash = function (str, raw) {
        // Converts the string to utf8 bytes if necessary
        // Then compute it using the binary function
        return SparkMD5.hashBinary(toUtf8(str), raw)
      }

      /**
       * Performs the md5 hash on a binary string.
       *
       * @param {String}  content The binary string
       * @param {Boolean} [raw]     True to get the raw string, false to get the hex string
       *
       * @return {String} The result
       */
      SparkMD5.hashBinary = function (content, raw) {
        var hash = md51(content),
          ret = hex(hash)

        return raw ? hexToBinaryString(ret) : ret
      }

      // ---------------------------------------------------

      /**
       * SparkMD5 OOP implementation for array buffers.
       *
       * Use this class to perform an incremental md5 ONLY for array buffers.
       */
      SparkMD5.ArrayBuffer = function () {
        // call reset to init the instance
        this.reset()
      }

      /**
       * Appends an array buffer.
       *
       * @param {ArrayBuffer} arr The array to be appended
       *
       * @return {SparkMD5.ArrayBuffer} The instance itself
       */
      SparkMD5.ArrayBuffer.prototype.append = function (arr) {
        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),
          length = buff.length,
          i

        this._length += arr.byteLength

        for (i = 64; i <= length; i += 64) {
          md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)))
        }

        this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0)

        return this
      }

      /**
       * Finishes the incremental computation, reseting the internal state and
       * returning the result.
       *
       * @param {Boolean} raw True to get the raw string, false to get the hex string
       *
       * @return {String} The result
       */
      SparkMD5.ArrayBuffer.prototype.end = function (raw) {
        var buff = this._buff,
          length = buff.length,
          tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          i,
          ret

        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= buff[i] << (i % 4 << 3)
        }

        this._finish(tail, length)
        ret = hex(this._hash)

        if (raw) {
          ret = hexToBinaryString(ret)
        }

        this.reset()

        return ret
      }

      /**
       * Resets the internal state of the computation.
       *
       * @return {SparkMD5.ArrayBuffer} The instance itself
       */
      SparkMD5.ArrayBuffer.prototype.reset = function () {
        this._buff = new Uint8Array(0)
        this._length = 0
        this._hash = [1732584193, -271733879, -1732584194, 271733878]

        return this
      }

      /**
       * Gets the internal state of the computation.
       *
       * @return {Object} The state
       */
      SparkMD5.ArrayBuffer.prototype.getState = function () {
        var state = SparkMD5.prototype.getState.call(this)

        // Convert buffer to a string
        state.buff = arrayBuffer2Utf8Str(state.buff)

        return state
      }

      /**
       * Gets the internal state of the computation.
       *
       * @param {Object} state The state
       *
       * @return {SparkMD5.ArrayBuffer} The instance itself
       */
      SparkMD5.ArrayBuffer.prototype.setState = function (state) {
        // Convert string to buffer
        state.buff = utf8Str2ArrayBuffer(state.buff, true)

        return SparkMD5.prototype.setState.call(this, state)
      }

      SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy

      SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish

      /**
       * Performs the md5 hash on an array buffer.
       *
       * @param {ArrayBuffer} arr The array buffer
       * @param {Boolean}     [raw] True to get the raw string, false to get the hex one
       *
       * @return {String} The result
       */
      SparkMD5.ArrayBuffer.hash = function (arr, raw) {
        var hash = md51_array(new Uint8Array(arr)),
          ret = hex(hash)

        return raw ? hexToBinaryString(ret) : ret
      }

      return SparkMD5
    })
  })

  /*
   * @Description: 图片上传
   * @Author: your name
   */
  /**
   * @description: 获取文件md5值
   * @param {fileObject} file 文件对象
   * @param {Function} processFn 读取md5进度
   * @return:
   */
  function getFileMD5(file, processFn) {
    return new Promise(function (resolve, reject) {
      var fileReader = new FileReader() //分块读取文件对象
      // file的slice方法，注意它的兼容性，在不同浏览器的写法不同
      var p = File.prototype
      var blobSlice = p.slice || p.mozSlice || p.webkitSlice
      var chunkSize = 10 * 1024 * 1024 //分块大小，20M
      var chunks = Math.ceil(file.size / chunkSize) //总块数
      var currentChunk = 0 //当前块数
      var spark = new sparkMd5() //获取MD5对象
      fileReader.onload = function (e) {
        var t = e.target
        var result = t.result || ''
        //数据加载完毕事件
        var binaryStr = ''
        var bytes = result instanceof ArrayBuffer ? new Uint8Array(result) : ''
        var length = bytes ? bytes.byteLength : 0
        for (var i = 0; i < length; i++) {
          binaryStr += String.fromCharCode(Number(bytes[i])) //二进制转换字符串
        }
        spark.appendBinary(binaryStr)
        currentChunk++
        if (processFn) {
          processFn(Math.ceil((currentChunk / chunks) * 100) + '%')
        } else {
          console.log('读取文件', Math.ceil((currentChunk / chunks) * 100) + '%')
        }
        if (currentChunk < chunks) {
          loadNext() //读取下一块数据
        } else {
          var fileMd5 = spark.end() //得到文件MD5值
          resolve(fileMd5)
        }
      }
      fileReader.onerror = function (e) {
        reject(e)
      }
      function loadNext() {
        var start = currentChunk * chunkSize
        var end = start + chunkSize >= file.size ? file.size : start + chunkSize
        //根据开始和结束位置，切割文件
        var b = blobSlice.call(file, start, end)
        //readAsBinaryString ie浏览器不兼容此方法
        //fileReader.readAsBinaryString(blobSlice.call(file, start, end));
        fileReader.readAsArrayBuffer(b) //ie，chrome，firefox等主流浏览器兼容此方法
      }
      loadNext()
    })
  }
  /**
   * @description: js触发获取文件
   * @param {String} accept 文件类型
   * @param {Boolean} multiple 是否多选
   */
  function selectFile(_a) {
    var _b = _a.accept,
      accept = _b === void 0 ? 'image/*' : _b,
      _c = _a.multiple,
      multiple = _c === void 0 ? false : _c
    var id = 'haloupload-input'
    var _input = document.getElementById(id)
    if (!_input) {
      _input = document.createElement('input')
      _input.id = id
      _input.type = 'file'
      _input.style.display = 'none'
      document.body.appendChild(_input)
    }
    _input.value = ''
    _input.accept = accept
    _input.multiple = multiple
    _input.click()
    return new Promise(function (resolve) {
      if (!_input) return resolve(null)
      _input.onchange = function () {
        var files = _input.files
        if (files && files.length) {
          resolve(files)
        }
      }
    })
  }
  /**
   * @description: 获取文件
   * @param {String} accept 获取文件类型
   * @param {Boolean} multiple 是否上传多张图片
   * @param {Boolean} needMD5 是否获取文件md5
   * @param {Function} readProcess 获取md5值进度
   * @return: Promise={file, md5}
   */
  function getFiles(options) {
    return __awaiter(this, void 0, void 0, function () {
      var _a,
        _b,
        multiple,
        _c,
        accept,
        _d,
        needMD5,
        _e,
        readProcess,
        files,
        res,
        i,
        file,
        md5,
        suffix
      return __generator(this, function (_f) {
        switch (_f.label) {
          case 0:
            ;(_a = options || {}),
              (_b = _a.multiple),
              (multiple = _b === void 0 ? true : _b),
              (_c = _a.accept),
              (accept = _c === void 0 ? 'image/*' : _c),
              (_d = _a.needMD5),
              (needMD5 = _d === void 0 ? true : _d),
              (_e = _a.readProcess),
              (readProcess = _e === void 0 ? function () {} : _e)
            return [
              4 /*yield*/,
              selectFile({
                multiple: multiple,
                accept: accept,
              }),
            ]
          case 1:
            files = _f.sent()
            if (!files) return [2 /*return*/, []]
            res = []
            i = 0
            _f.label = 2
          case 2:
            if (!(i < files.length)) return [3 /*break*/, 7]
            file = files[i]
            md5 = void 0
            if (!needMD5) return [3 /*break*/, 4]
            return [4 /*yield*/, getFileMD5(file, readProcess)]
          case 3:
            md5 = _f.sent()
            return [3 /*break*/, 5]
          case 4:
            md5 = new Date().getTime()
            _f.label = 5
          case 5:
            suffix = file.name.substring(file.name.lastIndexOf('.') || 0, file.name.length)
            res.push({
              file: file,
              md5: md5,
              name: md5 + suffix,
            })
            _f.label = 6
          case 6:
            i++
            return [3 /*break*/, 2]
          case 7:
            return [2 /*return*/, res]
        }
      })
    })
  }
  /**
   * @description: 单个获取文件
   */
  function getFile(o) {
    return __awaiter(this, void 0, void 0, function () {
      var options, item
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            options = o || {}
            options.multiple = false
            return [4 /*yield*/, getFiles(options)]
          case 1:
            item = _a.sent()[0]
            return [2 /*return*/, item]
        }
      })
    })
  }
  /**
   * @description: 上传文件
   * @param {String} url 上传地址
   * @param {FormData} data 上传对象
   * @param {withCredentials} Boolean 是否携带cookie
   * @param {Function} 进度
   * @return: Promise
   */
  function upload(_a) {
    var url = _a.url,
      data = _a.data,
      onProgress = _a.onProgress,
      _b = _a.toast,
      toast = _b === void 0 ? alert : _b,
      _c = _a.withCredentials,
      withCredentials = _c === void 0 ? false : _c
    return new Promise(function (resolve, reject) {
      var xhr = new XMLHttpRequest()
      if (!xhr.upload) return reject(new Error('xhr no upload methods'))
      xhr.upload.addEventListener(
        'progress',
        function (e) {
          if (onProgress)
            onProgress({
              data: data,
              loaded: e.loaded,
              total: e.total,
            })
        },
        false
      )
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            try {
              var res = JSON.parse(xhr.responseText)
              resolve(res)
            } catch (e) {
              resolve(xhr.responseText)
            }
          } else {
            var msg = '\u53D1\u751F\u9519\u8BEF ' + xhr.status
            var err = new Error(msg)
            err.response = xhr
            toast(msg)
            reject(err)
          }
        }
      }
      xhr.withCredentials = withCredentials || false
      xhr.open('POST', url, true)
      xhr.send(data)
    })
  }

  var uploader = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    getFileMD5: getFileMD5,
    selectFile: selectFile,
    getFiles: getFiles,
    getFile: getFile,
    upload: upload,
  })

  /**
   * @desc   判断浏览器类型
   * @return {Boolean}
   */
  var userAgent = ''
  if (typeof navigator !== 'undefined') {
    userAgent = navigator.userAgent.toLowerCase()
  }
  // ios浏览器
  var isIOS = /iPhone|iPad|iPod|iOS/i.test(userAgent)
  // 判断是否是iphonex
  var isIphoneX = /iPhone[\s\S]*OS X/.test(userAgent)
  // 微信浏览器
  var isWx = /micromessenger/i.test(userAgent)
  // 支付宝
  var isAliPay = /alipayclient/.test(userAgent)
  /**
   * @desc   判断是否pc页面
   * @return {Boolean}
   */
  var isPc = !/Android|webOS|iPhone|iPod|BlackBerry/i.test(userAgent)
  /**
   * @desc   判断是否为手机号
   * @param  {String|Number} str
   * @return {Boolean}
   */
  function isPhone(str) {
    return /^(0|86|17951)?1\d{10}$/.test(str)
  }
  /**
   * @desc   判断是否为邮箱地址
   * @param  {String}  str
   * @return {Boolean}
   */
  function isEmail(str) {
    return /\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/.test(str)
  }
  /**
   * @desc   判断是否是数字
   * @param  {String|Number} str
   * @return {Boolean}
   */
  function isNum(str) {
    return /^[0-9]+([.]{1}[0-9]+){0,1}$/.test(str)
  }
  /**
   *
   * @desc  判断是否为身份证号
   * @param  {String|Number} str
   * @return {Boolean}
   */
  function isIdCard(str) {
    return /^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/.test(
      str
    )
  }
  /**
   * @desc   判断是否为URL地址
   * @param  {String} str
   * @return {Boolean}
   */
  function isUrl(str) {
    // eslint-disable-next-line
    return /[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/i.test(str)
  }
  /**
   * @param url 图片地址
   * @returns {boolean}
   */
  function isImage(url) {
    if (!url) return false
    var index = url.lastIndexOf('.')
    if (index === -1) return false
    var suffix = url.substr(index + 1)
    var str = suffix.substr(0, suffix.indexOf('?'))
    return /png|gif|svg|jpg|icon|jpeg]/i.test(str)
  }

  var validate = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    isIOS: isIOS,
    isIphoneX: isIphoneX,
    isWx: isWx,
    isAliPay: isAliPay,
    isPc: isPc,
    isPhone: isPhone,
    isEmail: isEmail,
    isNum: isNum,
    isIdCard: isIdCard,
    isUrl: isUrl,
    isImage: isImage,
  })

  var bind = function bind(fn, thisArg) {
    return function wrap() {
      var args = new Array(arguments.length)
      for (var i = 0; i < args.length; i++) {
        args[i] = arguments[i]
      }
      return fn.apply(thisArg, args)
    }
  }

  /*global toString:true*/

  // utils is a library of generic helper functions non-specific to axios

  var toString = Object.prototype.toString

  /**
   * Determine if a value is an Array
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Array, otherwise false
   */
  function isArray(val) {
    return toString.call(val) === '[object Array]'
  }

  /**
   * Determine if a value is undefined
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if the value is undefined, otherwise false
   */
  function isUndefined(val) {
    return typeof val === 'undefined'
  }

  /**
   * Determine if a value is a Buffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Buffer, otherwise false
   */
  function isBuffer(val) {
    return (
      val !== null &&
      !isUndefined(val) &&
      val.constructor !== null &&
      !isUndefined(val.constructor) &&
      typeof val.constructor.isBuffer === 'function' &&
      val.constructor.isBuffer(val)
    )
  }

  /**
   * Determine if a value is an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an ArrayBuffer, otherwise false
   */
  function isArrayBuffer(val) {
    return toString.call(val) === '[object ArrayBuffer]'
  }

  /**
   * Determine if a value is a FormData
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an FormData, otherwise false
   */
  function isFormData(val) {
    return typeof FormData !== 'undefined' && val instanceof FormData
  }

  /**
   * Determine if a value is a view on an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
   */
  function isArrayBufferView(val) {
    var result
    if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
      result = ArrayBuffer.isView(val)
    } else {
      result = val && val.buffer && val.buffer instanceof ArrayBuffer
    }
    return result
  }

  /**
   * Determine if a value is a String
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a String, otherwise false
   */
  function isString(val) {
    return typeof val === 'string'
  }

  /**
   * Determine if a value is a Number
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Number, otherwise false
   */
  function isNumber(val) {
    return typeof val === 'number'
  }

  /**
   * Determine if a value is an Object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Object, otherwise false
   */
  function isObject(val) {
    return val !== null && typeof val === 'object'
  }

  /**
   * Determine if a value is a plain Object
   *
   * @param {Object} val The value to test
   * @return {boolean} True if value is a plain Object, otherwise false
   */
  function isPlainObject(val) {
    if (toString.call(val) !== '[object Object]') {
      return false
    }

    var prototype = Object.getPrototypeOf(val)
    return prototype === null || prototype === Object.prototype
  }

  /**
   * Determine if a value is a Date
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Date, otherwise false
   */
  function isDate(val) {
    return toString.call(val) === '[object Date]'
  }

  /**
   * Determine if a value is a File
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a File, otherwise false
   */
  function isFile(val) {
    return toString.call(val) === '[object File]'
  }

  /**
   * Determine if a value is a Blob
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Blob, otherwise false
   */
  function isBlob(val) {
    return toString.call(val) === '[object Blob]'
  }

  /**
   * Determine if a value is a Function
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Function, otherwise false
   */
  function isFunction(val) {
    return toString.call(val) === '[object Function]'
  }

  /**
   * Determine if a value is a Stream
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Stream, otherwise false
   */
  function isStream(val) {
    return isObject(val) && isFunction(val.pipe)
  }

  /**
   * Determine if a value is a URLSearchParams object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a URLSearchParams object, otherwise false
   */
  function isURLSearchParams(val) {
    return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams
  }

  /**
   * Trim excess whitespace off the beginning and end of a string
   *
   * @param {String} str The String to trim
   * @returns {String} The String freed of excess whitespace
   */
  function trim(str) {
    return str.replace(/^\s*/, '').replace(/\s*$/, '')
  }

  /**
   * Determine if we're running in a standard browser environment
   *
   * This allows axios to run in a web worker, and react-native.
   * Both environments support XMLHttpRequest, but not fully standard globals.
   *
   * web workers:
   *  typeof window -> undefined
   *  typeof document -> undefined
   *
   * react-native:
   *  navigator.product -> 'ReactNative'
   * nativescript
   *  navigator.product -> 'NativeScript' or 'NS'
   */
  function isStandardBrowserEnv() {
    if (
      typeof navigator !== 'undefined' &&
      (navigator.product === 'ReactNative' ||
        navigator.product === 'NativeScript' ||
        navigator.product === 'NS')
    ) {
      return false
    }
    return typeof window !== 'undefined' && typeof document !== 'undefined'
  }

  /**
   * Iterate over an Array or an Object invoking a function for each item.
   *
   * If `obj` is an Array callback will be called passing
   * the value, index, and complete array for each item.
   *
   * If 'obj' is an Object callback will be called passing
   * the value, key, and complete object for each property.
   *
   * @param {Object|Array} obj The object to iterate
   * @param {Function} fn The callback to invoke for each item
   */
  function forEach(obj, fn) {
    // Don't bother if no value provided
    if (obj === null || typeof obj === 'undefined') {
      return
    }

    // Force an array if not already something iterable
    if (typeof obj !== 'object') {
      /*eslint no-param-reassign:0*/
      obj = [obj]
    }

    if (isArray(obj)) {
      // Iterate over array values
      for (var i = 0, l = obj.length; i < l; i++) {
        fn.call(null, obj[i], i, obj)
      }
    } else {
      // Iterate over object keys
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          fn.call(null, obj[key], key, obj)
        }
      }
    }
  }

  /**
   * Accepts varargs expecting each argument to be an object, then
   * immutably merges the properties of each object and returns result.
   *
   * When multiple objects contain the same key the later object in
   * the arguments list will take precedence.
   *
   * Example:
   *
   * ```js
   * var result = merge({foo: 123}, {foo: 456});
   * console.log(result.foo); // outputs 456
   * ```
   *
   * @param {Object} obj1 Object to merge
   * @returns {Object} Result of all merge properties
   */
  function merge(/* obj1, obj2, obj3, ... */) {
    var result = {}
    function assignValue(val, key) {
      if (isPlainObject(result[key]) && isPlainObject(val)) {
        result[key] = merge(result[key], val)
      } else if (isPlainObject(val)) {
        result[key] = merge({}, val)
      } else if (isArray(val)) {
        result[key] = val.slice()
      } else {
        result[key] = val
      }
    }

    for (var i = 0, l = arguments.length; i < l; i++) {
      forEach(arguments[i], assignValue)
    }
    return result
  }

  /**
   * Extends object a by mutably adding to it the properties of object b.
   *
   * @param {Object} a The object to be extended
   * @param {Object} b The object to copy properties from
   * @param {Object} thisArg The object to bind function to
   * @return {Object} The resulting value of object a
   */
  function extend(a, b, thisArg) {
    forEach(b, function assignValue(val, key) {
      if (thisArg && typeof val === 'function') {
        a[key] = bind(val, thisArg)
      } else {
        a[key] = val
      }
    })
    return a
  }

  /**
   * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
   *
   * @param {string} content with BOM
   * @return {string} content value without BOM
   */
  function stripBOM(content) {
    if (content.charCodeAt(0) === 0xfeff) {
      content = content.slice(1)
    }
    return content
  }

  var utils = {
    isArray: isArray,
    isArrayBuffer: isArrayBuffer,
    isBuffer: isBuffer,
    isFormData: isFormData,
    isArrayBufferView: isArrayBufferView,
    isString: isString,
    isNumber: isNumber,
    isObject: isObject,
    isPlainObject: isPlainObject,
    isUndefined: isUndefined,
    isDate: isDate,
    isFile: isFile,
    isBlob: isBlob,
    isFunction: isFunction,
    isStream: isStream,
    isURLSearchParams: isURLSearchParams,
    isStandardBrowserEnv: isStandardBrowserEnv,
    forEach: forEach,
    merge: merge,
    extend: extend,
    trim: trim,
    stripBOM: stripBOM,
  }

  function encode(val) {
    return encodeURIComponent(val)
      .replace(/%3A/gi, ':')
      .replace(/%24/g, '$')
      .replace(/%2C/gi, ',')
      .replace(/%20/g, '+')
      .replace(/%5B/gi, '[')
      .replace(/%5D/gi, ']')
  }

  /**
   * Build a URL by appending params to the end
   *
   * @param {string} url The base of the url (e.g., http://www.google.com)
   * @param {object} [params] The params to be appended
   * @returns {string} The formatted url
   */
  var buildURL = function buildURL(url, params, paramsSerializer) {
    /*eslint no-param-reassign:0*/
    if (!params) {
      return url
    }

    var serializedParams
    if (paramsSerializer) {
      serializedParams = paramsSerializer(params)
    } else if (utils.isURLSearchParams(params)) {
      serializedParams = params.toString()
    } else {
      var parts = []

      utils.forEach(params, function serialize(val, key) {
        if (val === null || typeof val === 'undefined') {
          return
        }

        if (utils.isArray(val)) {
          key = key + '[]'
        } else {
          val = [val]
        }

        utils.forEach(val, function parseValue(v) {
          if (utils.isDate(v)) {
            v = v.toISOString()
          } else if (utils.isObject(v)) {
            v = JSON.stringify(v)
          }
          parts.push(encode(key) + '=' + encode(v))
        })
      })

      serializedParams = parts.join('&')
    }

    if (serializedParams) {
      var hashmarkIndex = url.indexOf('#')
      if (hashmarkIndex !== -1) {
        url = url.slice(0, hashmarkIndex)
      }

      url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams
    }

    return url
  }

  function InterceptorManager() {
    this.handlers = []
  }

  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  InterceptorManager.prototype.use = function use(fulfilled, rejected) {
    this.handlers.push({
      fulfilled: fulfilled,
      rejected: rejected,
    })
    return this.handlers.length - 1
  }

  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   */
  InterceptorManager.prototype.eject = function eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null
    }
  }

  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   */
  InterceptorManager.prototype.forEach = function forEach(fn) {
    utils.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h)
      }
    })
  }

  var InterceptorManager_1 = InterceptorManager

  /**
   * Transform the data for a request or a response
   *
   * @param {Object|String} data The data to be transformed
   * @param {Array} headers The headers for the request or response
   * @param {Array|Function} fns A single function or Array of functions
   * @returns {*} The resulting transformed data
   */
  var transformData = function transformData(data, headers, fns) {
    /*eslint no-param-reassign:0*/
    utils.forEach(fns, function transform(fn) {
      data = fn(data, headers)
    })

    return data
  }

  var isCancel = function isCancel(value) {
    return !!(value && value.__CANCEL__)
  }

  var normalizeHeaderName = function normalizeHeaderName(headers, normalizedName) {
    utils.forEach(headers, function processHeader(value, name) {
      if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
        headers[normalizedName] = value
        delete headers[name]
      }
    })
  }

  /**
   * Update an Error with the specified config, error code, and response.
   *
   * @param {Error} error The error to update.
   * @param {Object} config The config.
   * @param {string} [code] The error code (for example, 'ECONNABORTED').
   * @param {Object} [request] The request.
   * @param {Object} [response] The response.
   * @returns {Error} The error.
   */
  var enhanceError = function enhanceError(error, config, code, request, response) {
    error.config = config
    if (code) {
      error.code = code
    }

    error.request = request
    error.response = response
    error.isAxiosError = true

    error.toJSON = function toJSON() {
      return {
        // Standard
        message: this.message,
        name: this.name,
        // Microsoft
        description: this.description,
        number: this.number,
        // Mozilla
        fileName: this.fileName,
        lineNumber: this.lineNumber,
        columnNumber: this.columnNumber,
        stack: this.stack,
        // Axios
        config: this.config,
        code: this.code,
      }
    }
    return error
  }

  /**
   * Create an Error with the specified message, config, error code, request and response.
   *
   * @param {string} message The error message.
   * @param {Object} config The config.
   * @param {string} [code] The error code (for example, 'ECONNABORTED').
   * @param {Object} [request] The request.
   * @param {Object} [response] The response.
   * @returns {Error} The created error.
   */
  var createError = function createError(message, config, code, request, response) {
    var error = new Error(message)
    return enhanceError(error, config, code, request, response)
  }

  /**
   * Resolve or reject a Promise based on response status.
   *
   * @param {Function} resolve A function that resolves the promise.
   * @param {Function} reject A function that rejects the promise.
   * @param {object} response The response.
   */
  var settle = function settle(resolve, reject, response) {
    var validateStatus = response.config.validateStatus
    if (!response.status || !validateStatus || validateStatus(response.status)) {
      resolve(response)
    } else {
      reject(
        createError(
          'Request failed with status code ' + response.status,
          response.config,
          null,
          response.request,
          response
        )
      )
    }
  }

  var cookies = utils.isStandardBrowserEnv()
    ? // Standard browser envs support document.cookie
      (function standardBrowserEnv() {
        return {
          write: function write(name, value, expires, path, domain, secure) {
            var cookie = []
            cookie.push(name + '=' + encodeURIComponent(value))

            if (utils.isNumber(expires)) {
              cookie.push('expires=' + new Date(expires).toGMTString())
            }

            if (utils.isString(path)) {
              cookie.push('path=' + path)
            }

            if (utils.isString(domain)) {
              cookie.push('domain=' + domain)
            }

            if (secure === true) {
              cookie.push('secure')
            }

            document.cookie = cookie.join('; ')
          },

          read: function read(name) {
            var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'))
            return match ? decodeURIComponent(match[3]) : null
          },

          remove: function remove(name) {
            this.write(name, '', Date.now() - 86400000)
          },
        }
      })()
    : // Non standard browser env (web workers, react-native) lack needed support.
      (function nonStandardBrowserEnv() {
        return {
          write: function write() {},
          read: function read() {
            return null
          },
          remove: function remove() {},
        }
      })()

  /**
   * Determines whether the specified URL is absolute
   *
   * @param {string} url The URL to test
   * @returns {boolean} True if the specified URL is absolute, otherwise false
   */
  var isAbsoluteURL = function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url)
  }

  /**
   * Creates a new URL by combining the specified URLs
   *
   * @param {string} baseURL The base URL
   * @param {string} relativeURL The relative URL
   * @returns {string} The combined URL
   */
  var combineURLs = function combineURLs(baseURL, relativeURL) {
    return relativeURL
      ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
      : baseURL
  }

  /**
   * Creates a new URL by combining the baseURL with the requestedURL,
   * only when the requestedURL is not already an absolute URL.
   * If the requestURL is absolute, this function returns the requestedURL untouched.
   *
   * @param {string} baseURL The base URL
   * @param {string} requestedURL Absolute or relative URL to combine
   * @returns {string} The combined full path
   */
  var buildFullPath = function buildFullPath(baseURL, requestedURL) {
    if (baseURL && !isAbsoluteURL(requestedURL)) {
      return combineURLs(baseURL, requestedURL)
    }
    return requestedURL
  }

  // Headers whose duplicates are ignored by node
  // c.f. https://nodejs.org/api/http.html#http_message_headers
  var ignoreDuplicateOf = [
    'age',
    'authorization',
    'content-length',
    'content-type',
    'etag',
    'expires',
    'from',
    'host',
    'if-modified-since',
    'if-unmodified-since',
    'last-modified',
    'location',
    'max-forwards',
    'proxy-authorization',
    'referer',
    'retry-after',
    'user-agent',
  ]

  /**
   * Parse headers into an object
   *
   * ```
   * Date: Wed, 27 Aug 2014 08:58:49 GMT
   * Content-Type: application/json
   * Connection: keep-alive
   * Transfer-Encoding: chunked
   * ```
   *
   * @param {String} headers Headers needing to be parsed
   * @returns {Object} Headers parsed into an object
   */
  var parseHeaders = function parseHeaders(headers) {
    var parsed = {}
    var key
    var val
    var i

    if (!headers) {
      return parsed
    }

    utils.forEach(headers.split('\n'), function parser(line) {
      i = line.indexOf(':')
      key = utils.trim(line.substr(0, i)).toLowerCase()
      val = utils.trim(line.substr(i + 1))

      if (key) {
        if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
          return
        }
        if (key === 'set-cookie') {
          parsed[key] = (parsed[key] ? parsed[key] : []).concat([val])
        } else {
          parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val
        }
      }
    })

    return parsed
  }

  var isURLSameOrigin = utils.isStandardBrowserEnv()
    ? // Standard browser envs have full support of the APIs needed to test
      // whether the request URL is of the same origin as current location.
      (function standardBrowserEnv() {
        var msie = /(msie|trident)/i.test(navigator.userAgent)
        var urlParsingNode = document.createElement('a')
        var originURL

        /**
         * Parse a URL to discover it's components
         *
         * @param {String} url The URL to be parsed
         * @returns {Object}
         */
        function resolveURL(url) {
          var href = url

          if (msie) {
            // IE needs attribute set twice to normalize properties
            urlParsingNode.setAttribute('href', href)
            href = urlParsingNode.href
          }

          urlParsingNode.setAttribute('href', href)

          // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
          return {
            href: urlParsingNode.href,
            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
            host: urlParsingNode.host,
            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
            hostname: urlParsingNode.hostname,
            port: urlParsingNode.port,
            pathname:
              urlParsingNode.pathname.charAt(0) === '/'
                ? urlParsingNode.pathname
                : '/' + urlParsingNode.pathname,
          }
        }

        originURL = resolveURL(window.location.href)

        /**
         * Determine if a URL shares the same origin as the current location
         *
         * @param {String} requestURL The URL to test
         * @returns {boolean} True if URL shares the same origin, otherwise false
         */
        return function isURLSameOrigin(requestURL) {
          var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL
          return parsed.protocol === originURL.protocol && parsed.host === originURL.host
        }
      })()
    : // Non standard browser envs (web workers, react-native) lack needed support.
      (function nonStandardBrowserEnv() {
        return function isURLSameOrigin() {
          return true
        }
      })()

  var xhr = function xhrAdapter(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
      var requestData = config.data
      var requestHeaders = config.headers

      if (utils.isFormData(requestData)) {
        delete requestHeaders['Content-Type'] // Let the browser set it
      }

      if ((utils.isBlob(requestData) || utils.isFile(requestData)) && requestData.type) {
        delete requestHeaders['Content-Type'] // Let the browser set it
      }

      var request = new XMLHttpRequest()

      // HTTP basic authentication
      if (config.auth) {
        var username = config.auth.username || ''
        var password = unescape(encodeURIComponent(config.auth.password)) || ''
        requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password)
      }

      var fullPath = buildFullPath(config.baseURL, config.url)
      request.open(
        config.method.toUpperCase(),
        buildURL(fullPath, config.params, config.paramsSerializer),
        true
      )

      // Set the request timeout in MS
      request.timeout = config.timeout

      // Listen for ready state
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (
          request.status === 0 &&
          !(request.responseURL && request.responseURL.indexOf('file:') === 0)
        ) {
          return
        }

        // Prepare the response
        var responseHeaders =
          'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null
        var responseData =
          !config.responseType || config.responseType === 'text'
            ? request.responseText
            : request.response
        var response = {
          data: responseData,
          status: request.status,
          statusText: request.statusText,
          headers: responseHeaders,
          config: config,
          request: request,
        }

        settle(resolve, reject, response)

        // Clean up request
        request = null
      }

      // Handle browser request cancellation (as opposed to a manual cancellation)
      request.onabort = function handleAbort() {
        if (!request) {
          return
        }

        reject(createError('Request aborted', config, 'ECONNABORTED', request))

        // Clean up request
        request = null
      }

      // Handle low level network errors
      request.onerror = function handleError() {
        // Real errors are hidden from us by the browser
        // onerror should only fire if it's a network error
        reject(createError('Network Error', config, null, request))

        // Clean up request
        request = null
      }

      // Handle timeout
      request.ontimeout = function handleTimeout() {
        var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded'
        if (config.timeoutErrorMessage) {
          timeoutErrorMessage = config.timeoutErrorMessage
        }
        reject(createError(timeoutErrorMessage, config, 'ECONNABORTED', request))

        // Clean up request
        request = null
      }

      // Add xsrf header
      // This is only done if running in a standard browser environment.
      // Specifically not if we're in a web worker, or react-native.
      if (utils.isStandardBrowserEnv()) {
        // Add xsrf header
        var xsrfValue =
          (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName
            ? cookies.read(config.xsrfCookieName)
            : undefined

        if (xsrfValue) {
          requestHeaders[config.xsrfHeaderName] = xsrfValue
        }
      }

      // Add headers to the request
      if ('setRequestHeader' in request) {
        utils.forEach(requestHeaders, function setRequestHeader(val, key) {
          if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
            // Remove Content-Type if data is undefined
            delete requestHeaders[key]
          } else {
            // Otherwise add header to the request
            request.setRequestHeader(key, val)
          }
        })
      }

      // Add withCredentials to request if needed
      if (!utils.isUndefined(config.withCredentials)) {
        request.withCredentials = !!config.withCredentials
      }

      // Add responseType to request if needed
      if (config.responseType) {
        try {
          request.responseType = config.responseType
        } catch (e) {
          // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
          // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
          if (config.responseType !== 'json') {
            throw e
          }
        }
      }

      // Handle progress if needed
      if (typeof config.onDownloadProgress === 'function') {
        request.addEventListener('progress', config.onDownloadProgress)
      }

      // Not all browsers support upload events
      if (typeof config.onUploadProgress === 'function' && request.upload) {
        request.upload.addEventListener('progress', config.onUploadProgress)
      }

      if (config.cancelToken) {
        // Handle cancellation
        config.cancelToken.promise.then(function onCanceled(cancel) {
          if (!request) {
            return
          }

          request.abort()
          reject(cancel)
          // Clean up request
          request = null
        })
      }

      if (!requestData) {
        requestData = null
      }

      // Send the request
      request.send(requestData)
    })
  }

  var DEFAULT_CONTENT_TYPE = {
    'Content-Type': 'application/x-www-form-urlencoded',
  }

  function setContentTypeIfUnset(headers, value) {
    if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
      headers['Content-Type'] = value
    }
  }

  function getDefaultAdapter() {
    var adapter
    if (typeof XMLHttpRequest !== 'undefined') {
      // For browsers use XHR adapter
      adapter = xhr
    } else if (
      typeof process !== 'undefined' &&
      Object.prototype.toString.call(process) === '[object process]'
    ) {
      // For node use HTTP adapter
      adapter = xhr
    }
    return adapter
  }

  var defaults = {
    adapter: getDefaultAdapter(),

    transformRequest: [
      function transformRequest(data, headers) {
        normalizeHeaderName(headers, 'Accept')
        normalizeHeaderName(headers, 'Content-Type')
        if (
          utils.isFormData(data) ||
          utils.isArrayBuffer(data) ||
          utils.isBuffer(data) ||
          utils.isStream(data) ||
          utils.isFile(data) ||
          utils.isBlob(data)
        ) {
          return data
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8')
          return data.toString()
        }
        if (utils.isObject(data)) {
          setContentTypeIfUnset(headers, 'application/json;charset=utf-8')
          return JSON.stringify(data)
        }
        return data
      },
    ],

    transformResponse: [
      function transformResponse(data) {
        /*eslint no-param-reassign:0*/
        if (typeof data === 'string') {
          try {
            data = JSON.parse(data)
          } catch (e) {
            /* Ignore */
          }
        }
        return data
      },
    ],

    /**
     * A timeout in milliseconds to abort a request. If set to 0 (default) a
     * timeout is not created.
     */
    timeout: 0,

    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',

    maxContentLength: -1,
    maxBodyLength: -1,

    validateStatus: function validateStatus(status) {
      return status >= 200 && status < 300
    },
  }

  defaults.headers = {
    common: {
      Accept: 'application/json, text/plain, */*',
    },
  }

  utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
    defaults.headers[method] = {}
  })

  utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
    defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE)
  })

  var defaults_1 = defaults

  /**
   * Throws a `Cancel` if cancellation has been requested.
   */
  function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
      config.cancelToken.throwIfRequested()
    }
  }

  /**
   * Dispatch a request to the server using the configured adapter.
   *
   * @param {object} config The config that is to be used for the request
   * @returns {Promise} The Promise to be fulfilled
   */
  var dispatchRequest = function dispatchRequest(config) {
    throwIfCancellationRequested(config)

    // Ensure headers exist
    config.headers = config.headers || {}

    // Transform request data
    config.data = transformData(config.data, config.headers, config.transformRequest)

    // Flatten headers
    config.headers = utils.merge(
      config.headers.common || {},
      config.headers[config.method] || {},
      config.headers
    )

    utils.forEach(
      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
      function cleanHeaderConfig(method) {
        delete config.headers[method]
      }
    )

    var adapter = config.adapter || defaults_1.adapter

    return adapter(config).then(
      function onAdapterResolution(response) {
        throwIfCancellationRequested(config)

        // Transform response data
        response.data = transformData(response.data, response.headers, config.transformResponse)

        return response
      },
      function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config)

          // Transform response data
          if (reason && reason.response) {
            reason.response.data = transformData(
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            )
          }
        }

        return Promise.reject(reason)
      }
    )
  }

  /**
   * Config-specific merge-function which creates a new config-object
   * by merging two configuration objects together.
   *
   * @param {Object} config1
   * @param {Object} config2
   * @returns {Object} New object resulting from merging config2 to config1
   */
  var mergeConfig = function mergeConfig(config1, config2) {
    // eslint-disable-next-line no-param-reassign
    config2 = config2 || {}
    var config = {}

    var valueFromConfig2Keys = ['url', 'method', 'data']
    var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params']
    var defaultToConfig2Keys = [
      'baseURL',
      'transformRequest',
      'transformResponse',
      'paramsSerializer',
      'timeout',
      'timeoutMessage',
      'withCredentials',
      'adapter',
      'responseType',
      'xsrfCookieName',
      'xsrfHeaderName',
      'onUploadProgress',
      'onDownloadProgress',
      'decompress',
      'maxContentLength',
      'maxBodyLength',
      'maxRedirects',
      'transport',
      'httpAgent',
      'httpsAgent',
      'cancelToken',
      'socketPath',
      'responseEncoding',
    ]
    var directMergeKeys = ['validateStatus']

    function getMergedValue(target, source) {
      if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
        return utils.merge(target, source)
      } else if (utils.isPlainObject(source)) {
        return utils.merge({}, source)
      } else if (utils.isArray(source)) {
        return source.slice()
      }
      return source
    }

    function mergeDeepProperties(prop) {
      if (!utils.isUndefined(config2[prop])) {
        config[prop] = getMergedValue(config1[prop], config2[prop])
      } else if (!utils.isUndefined(config1[prop])) {
        config[prop] = getMergedValue(undefined, config1[prop])
      }
    }

    utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
      if (!utils.isUndefined(config2[prop])) {
        config[prop] = getMergedValue(undefined, config2[prop])
      }
    })

    utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties)

    utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
      if (!utils.isUndefined(config2[prop])) {
        config[prop] = getMergedValue(undefined, config2[prop])
      } else if (!utils.isUndefined(config1[prop])) {
        config[prop] = getMergedValue(undefined, config1[prop])
      }
    })

    utils.forEach(directMergeKeys, function merge(prop) {
      if (prop in config2) {
        config[prop] = getMergedValue(config1[prop], config2[prop])
      } else if (prop in config1) {
        config[prop] = getMergedValue(undefined, config1[prop])
      }
    })

    var axiosKeys = valueFromConfig2Keys
      .concat(mergeDeepPropertiesKeys)
      .concat(defaultToConfig2Keys)
      .concat(directMergeKeys)

    var otherKeys = Object.keys(config1)
      .concat(Object.keys(config2))
      .filter(function filterAxiosKeys(key) {
        return axiosKeys.indexOf(key) === -1
      })

    utils.forEach(otherKeys, mergeDeepProperties)

    return config
  }

  /**
   * Create a new instance of Axios
   *
   * @param {Object} instanceConfig The default config for the instance
   */
  function Axios(instanceConfig) {
    this.defaults = instanceConfig
    this.interceptors = {
      request: new InterceptorManager_1(),
      response: new InterceptorManager_1(),
    }
  }

  /**
   * Dispatch a request
   *
   * @param {Object} config The config specific for this request (merged with this.defaults)
   */
  Axios.prototype.request = function request(config) {
    /*eslint no-param-reassign:0*/
    // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof config === 'string') {
      config = arguments[1] || {}
      config.url = arguments[0]
    } else {
      config = config || {}
    }

    config = mergeConfig(this.defaults, config)

    // Set config.method
    if (config.method) {
      config.method = config.method.toLowerCase()
    } else if (this.defaults.method) {
      config.method = this.defaults.method.toLowerCase()
    } else {
      config.method = 'get'
    }

    // Hook up interceptors middleware
    var chain = [dispatchRequest, undefined]
    var promise = Promise.resolve(config)

    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      chain.unshift(interceptor.fulfilled, interceptor.rejected)
    })

    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      chain.push(interceptor.fulfilled, interceptor.rejected)
    })

    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift())
    }

    return promise
  }

  Axios.prototype.getUri = function getUri(config) {
    config = mergeConfig(this.defaults, config)
    return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '')
  }

  // Provide aliases for supported request methods
  utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
    /*eslint func-names:0*/
    Axios.prototype[method] = function (url, config) {
      return this.request(
        mergeConfig(config || {}, {
          method: method,
          url: url,
        })
      )
    }
  })

  utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
    /*eslint func-names:0*/
    Axios.prototype[method] = function (url, data, config) {
      return this.request(
        mergeConfig(config || {}, {
          method: method,
          url: url,
          data: data,
        })
      )
    }
  })

  var Axios_1 = Axios

  /**
   * A `Cancel` is an object that is thrown when an operation is canceled.
   *
   * @class
   * @param {string=} message The message.
   */
  function Cancel(message) {
    this.message = message
  }

  Cancel.prototype.toString = function toString() {
    return 'Cancel' + (this.message ? ': ' + this.message : '')
  }

  Cancel.prototype.__CANCEL__ = true

  var Cancel_1 = Cancel

  /**
   * A `CancelToken` is an object that can be used to request cancellation of an operation.
   *
   * @class
   * @param {Function} executor The executor function.
   */
  function CancelToken(executor) {
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.')
    }

    var resolvePromise
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve
    })

    var token = this
    executor(function cancel(message) {
      if (token.reason) {
        // Cancellation has already been requested
        return
      }

      token.reason = new Cancel_1(message)
      resolvePromise(token.reason)
    })
  }

  /**
   * Throws a `Cancel` if cancellation has been requested.
   */
  CancelToken.prototype.throwIfRequested = function throwIfRequested() {
    if (this.reason) {
      throw this.reason
    }
  }

  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  CancelToken.source = function source() {
    var cancel
    var token = new CancelToken(function executor(c) {
      cancel = c
    })
    return {
      token: token,
      cancel: cancel,
    }
  }

  var CancelToken_1 = CancelToken

  /**
   * Syntactic sugar for invoking a function and expanding an array for arguments.
   *
   * Common use case would be to use `Function.prototype.apply`.
   *
   *  ```js
   *  function f(x, y, z) {}
   *  var args = [1, 2, 3];
   *  f.apply(null, args);
   *  ```
   *
   * With `spread` this example can be re-written.
   *
   *  ```js
   *  spread(function(x, y, z) {})([1, 2, 3]);
   *  ```
   *
   * @param {Function} callback
   * @returns {Function}
   */
  var spread = function spread(callback) {
    return function wrap(arr) {
      return callback.apply(null, arr)
    }
  }

  /**
   * Create an instance of Axios
   *
   * @param {Object} defaultConfig The default config for the instance
   * @return {Axios} A new instance of Axios
   */
  function createInstance(defaultConfig) {
    var context = new Axios_1(defaultConfig)
    var instance = bind(Axios_1.prototype.request, context)

    // Copy axios.prototype to instance
    utils.extend(instance, Axios_1.prototype, context)

    // Copy context to instance
    utils.extend(instance, context)

    return instance
  }

  // Create the default instance to be exported
  var axios = createInstance(defaults_1)

  // Expose Axios class to allow class inheritance
  axios.Axios = Axios_1

  // Factory for creating new instances
  axios.create = function create(instanceConfig) {
    return createInstance(mergeConfig(axios.defaults, instanceConfig))
  }

  // Expose Cancel & CancelToken
  axios.Cancel = Cancel_1
  axios.CancelToken = CancelToken_1
  axios.isCancel = isCancel

  // Expose all/spread
  axios.all = function all(promises) {
    return Promise.all(promises)
  }
  axios.spread = spread

  var axios_1 = axios

  // Allow use of default import syntax in TypeScript
  var _default = axios
  axios_1.default = _default

  var axios$1 = axios_1

  /**
   * 加载sdk
   */
  var PromiseSDK
  function loadWechatJSSDK() {
    if (PromiseSDK) {
      return PromiseSDK
    }
    // 短时间内,多次调用时; 避免重复加载
    PromiseSDK = new Promise(function (resolve, reject) {
      var loaded = !!window.wx
      if (loaded) {
        resolve()
        return
      }
      var script = document.createElement('script')
      script.src = '//res.wx.qq.com/open/js/jweixin-1.4.0.js '
      document.head.appendChild(script)
      script.onerror = reject
      script.onload = function () {
        resolve()
      }
    })
    return PromiseSDK
  }
  /**
   * 获取分享配置
   */
  function getConfig() {
    return __awaiter(this, void 0, void 0, function () {
      var href, data
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            href = window.location.href.split('#')[0]
            if (!href.includes('//www.luzhongkuan.cn')) {
              return [2 /*return*/, Promise.reject(Error('没有加入分享配置'))]
            }
            return [
              4 /*yield*/,
              axios$1({
                url: '//www.luzhongkuan.cn/api/wx/shareConfig?url=' + encodeURIComponent(href),
              }),
            ]
          case 1:
            data = _a.sent().data
            if (data.success) {
              return [2 /*return*/, data.data]
            }
            return [2 /*return*/, Promise.reject(Error('获取分享配置失败'))]
        }
      })
    })
  }
  /**
   * 分享内容，分享配置
   * @param {Object} userShareData 文件对象
   * @param {Object} wxConfig 分享配置
   */
  var wxShare = function (userShareData, wxConfig) {
    return __awaiter(void 0, void 0, void 0, function () {
      var defaultShare, config, _a, wx
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            if (!isWx) return [2 /*return*/]
            return [4 /*yield*/, loadWechatJSSDK()]
          case 1:
            _b.sent()
            defaultShare = {
              title: document.title,
              desc: '',
              link: window.location.href,
              imgUrl: 'http://lib.luzhongkuan.cn/images/logo.png', // 分享图标
            }
            _a = wxConfig
            if (_a) return [3 /*break*/, 3]
            return [4 /*yield*/, getConfig()]
          case 2:
            _a = _b.sent()
            _b.label = 3
          case 3:
            config = _a
            wx = window.wx
            if (!wx) return [2 /*return*/]
            wx.config(config)
            wx.ready(function () {
              var shareData = __assign(__assign({}, defaultShare), userShareData)
              // 自定义“分享给朋友”及“分享到QQ”按钮的分享内容
              wx.updateAppMessageShareData(shareData)
              var timelineData = {
                title: shareData.desc || shareData.title,
                link: shareData.link,
                imgUrl: shareData.imgUrl, // 分享图标
              }
              // 自定义“分享到朋友圈”及“分享到QQ空间”按钮的分享内容（1.4.0）
              wx.updateTimelineShareData(timelineData)
            })
            return [2 /*return*/]
        }
      })
    })
  }

  /**
   * 动态加载script
   * @param src {string}
   * @returns {promise}
   */
  function createScripts(src) {
    // 短时间内,多次调用时; 避免重复加载
    return new Promise(function (resolve, reject) {
      var script = document.createElement('script')
      script.src = src
      document.head.appendChild(script)
      script.onerror = reject
      script.onload = function () {
        return resolve(src)
      }
    })
  }

  var defaultCDN = 'https://cdn.bootcdn.net/ajax/libs/vConsole/3.3.4/vconsole.min.js'
  var p
  /**
   * 加载vconsole
   * @param src vconsole cdn资源
   */
  function loadVconsole(src) {
    if (src === void 0) {
      src = defaultCDN
    }
    if (p) return p
    p = createScripts(src)
    return p
  }
  var exportVconsole = {
    _vConsole: null,
    init: function (src) {
      return __awaiter(this, void 0, void 0, function () {
        var VConsole
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (this._vConsole) return [2 /*return*/, this._vConsole]
              return [4 /*yield*/, loadVconsole(src)]
            case 1:
              _a.sent()
              VConsole = window.VConsole
              if (typeof VConsole === 'function') {
                this._vConsole = new VConsole()
              }
              return [2 /*return*/]
          }
        })
      })
    },
    show: function (src) {
      return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4 /*yield*/, this.init(src)]
            case 1:
              _a.sent()
              if (this._vConsole) {
                this._vConsole.showSwitch()
              }
              return [2 /*return*/]
          }
        })
      })
    },
    hide: function () {
      if (this._vConsole) {
        this._vConsole.destroy()
        this._vConsole = null
      }
    },
  }

  /**
   * 移动端阻止弹窗滚动工具类
   */
  var targetY = 0
  var preventTouchScroll = function (el) {
    var touchstart = function (e) {
      targetY = e.targetTouches[0].clientY
    }
    var touchmove = function (e) {
      var newTargetY = e.targetTouches[0].clientY
      var scrollTop = el.scrollTop
      var scrollHeight = el.scrollHeight
      var clientHeight = el.clientHeight
      if (scrollTop <= 0 && newTargetY - targetY >= 0) {
        e.cancelable && e.preventDefault()
      } else if (scrollTop >= scrollHeight - clientHeight && newTargetY - targetY <= 0) {
        e.cancelable && e.preventDefault()
      }
    }
    el.addEventListener('touchstart', touchstart)
    el.addEventListener('touchmove', touchmove)
    return function () {
      el.removeEventListener('touchstart', touchstart)
      el.removeEventListener('touchmove', touchmove)
    }
  }

  var load
  // 动态加载xlsx插件
  function loadXLSX() {
    return __awaiter(this, void 0, void 0, function () {
      var xlsxDownloadURL
      return __generator(this, function (_a) {
        if (load) return [2 /*return*/, load]
        xlsxDownloadURL = 'https://cdn.bootcdn.net/ajax/libs/xlsx/0.16.5/xlsx.full.min.js'
        load = createScripts(xlsxDownloadURL)
        return [2 /*return*/, load]
      })
    })
  }
  // 设置自动宽度
  function autoWidth(ws, data) {
    if (!data.length) return []
    // 中文两个字符宽度2，英文宽度1
    var colWidth = data.map(function (item) {
      return Object.values(item).map(function (val) {
        var mach = !val ? 10 : val.toString().length * (val.toString().charCodeAt(0) > 255 ? 2 : 1)
        return {
          wch: Math.max(10, mach + 2),
        }
      })
    })
    var cols = colWidth[0]
    for (var i = 1; i < colWidth.length; i++) {
      for (var j = 0; j < colWidth[i].length; j++) {
        if (cols[j]['wch'] < colWidth[i][j]['wch']) {
          cols[j]['wch'] = colWidth[i][j]['wch']
        }
      }
    }
    ws['!cols'] = cols
  }
  /**
   * json导出excel
   * @param name：文件名字，string
   * @param data： 内容： array
   * @param header： 标题： Object{key: 对应名字}
   * @param skipHeader: 是否隐藏头部
   */
  var JSONToExcel = function (options) {
    return __awaiter(void 0, void 0, void 0, function () {
      var _a, name, _b, data, _c, header, _d, skipHeader, cloneData, ws, wb
      return __generator(this, function (_e) {
        switch (_e.label) {
          case 0:
            return [4 /*yield*/, loadXLSX()]
          case 1:
            _e.sent()
            ;(_a = options.name),
              (name = _a === void 0 ? 'excel' : _a),
              (_b = options.data),
              (data = _b === void 0 ? [] : _b),
              (_c = options.header),
              (header = _c === void 0 ? {} : _c),
              (_d = options.skipHeader),
              (skipHeader = _d === void 0 ? true : _d)
            cloneData = __spreadArrays(data)
            cloneData.unshift(header)
            ws = XLSX.utils.json_to_sheet(cloneData, {
              header: Object.keys(header),
              skipHeader: skipHeader,
            })
            // 设置自动宽度
            autoWidth(ws, cloneData)
            wb = XLSX.utils.book_new()
            XLSX.utils.book_append_sheet(wb, ws, 'SheetJS')
            /* generate file and send to client */
            XLSX.writeFile(wb, name + '.xlsx')
            return [2 /*return*/]
        }
      })
    })
  }
  var excelToJSON = function (file) {
    return __awaiter(void 0, void 0, void 0, function () {
      var suffix
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!file) return [2 /*return*/]
            return [4 /*yield*/, loadXLSX()]
          case 1:
            _a.sent()
            suffix = file.name.split('.')[1]
            if (suffix !== 'xls' && suffix !== 'xlsx') {
              alert('导入的文件格式不正确!')
              return [2 /*return*/]
            }
            return [
              2 /*return*/,
              new Promise(function (resolve, reject) {
                var reader = new FileReader()
                reader.onload = function (e) {
                  if (!e.target) return reject('event target undefined')
                  var t = e.target
                  var wb = XLSX.read(t.result, {
                    type: 'binary',
                  })
                  resolve(XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]))
                }
                reader.readAsBinaryString(file)
              }),
            ]
        }
      })
    })
  }

  var xlsx = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    JSONToExcel: JSONToExcel,
    excelToJSON: excelToJSON,
  })

  exports.Drag = Drag
  exports.LoadMore = LoadMore
  exports.cancelAnimationFrame = cancelAnimationFrame
  exports.color = color
  exports.cookie = cookie
  exports.copy = copy
  exports.dayjs = dayjs
  exports.debounce = debounce
  exports.deepClone = deepClone
  exports.download = download$1
  exports.eleSize = eleSize
  exports.filter = filter
  exports.fullScreen = fullScreen
  exports.imgUtil = imgUtil
  exports.localData = localData
  exports.lockScroll = lock
  exports.mathUtil = mathUtil
  exports.preventTouchScroll = preventTouchScroll
  exports.qs = qs
  exports.rem = rem
  exports.requestAnimationFrame = requestAnimationFrame
  exports.selectRange = selectRange
  exports.smoothScroll = smoothScroll
  exports.speaker = speaker$1
  exports.throttle = throttle
  exports.uploader = uploader
  exports.validate = validate
  exports.vconsole = exportVconsole
  exports.wxShare = wxShare
  exports.xlsx = xlsx

  Object.defineProperty(exports, '__esModule', { value: true })

  return exports
})({})
